nvoid.builtin.alpha.active = false
nvoid.builtin.alpha.dashboard.opts.autostart = true
nvoid.builtin.alpha.dashboard.section.buttons.entries["1"]["1"] = "f"
nvoid.builtin.alpha.dashboard.section.buttons.entries["1"]["2"] = "󰈞  Find File"
nvoid.builtin.alpha.dashboard.section.buttons.entries["1"]["3"] = "<CMD>Telescope find_files<CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["2"]["1"] = "n"
nvoid.builtin.alpha.dashboard.section.buttons.entries["2"]["2"] = "  New File"
nvoid.builtin.alpha.dashboard.section.buttons.entries["2"]["3"] = "<CMD>ene!<CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["3"]["1"] = "o"
nvoid.builtin.alpha.dashboard.section.buttons.entries["3"]["2"] = "  Recent files"
nvoid.builtin.alpha.dashboard.section.buttons.entries["3"]["3"] = ":Telescope oldfiles <CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["4"]["1"] = "e"
nvoid.builtin.alpha.dashboard.section.buttons.entries["4"]["2"] = "  Configuration"
nvoid.builtin.alpha.dashboard.section.buttons.entries["4"]["3"] = "<CMD>edit /home/ysf/.config/nvoid/config.lua <CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["5"]["1"] = "t"
nvoid.builtin.alpha.dashboard.section.buttons.entries["5"]["2"] = "󰊄  Find Text"
nvoid.builtin.alpha.dashboard.section.buttons.entries["5"]["3"] = "<CMD>Telescope live_grep<CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["6"]["1"] = "u"
nvoid.builtin.alpha.dashboard.section.buttons.entries["6"]["2"] = "  Update Nvoid"
nvoid.builtin.alpha.dashboard.section.buttons.entries["6"]["3"] = "<CMD>NvoidUpdate<CR>"
nvoid.builtin.alpha.dashboard.section.buttons.entries["7"]["1"] = "q"
nvoid.builtin.alpha.dashboard.section.buttons.entries["7"]["2"] = "󰅖  Quit"
nvoid.builtin.alpha.dashboard.section.buttons.entries["7"]["3"] = "<CMD>:qa<CR>"
nvoid.builtin.alpha.dashboard.section.buttons.opts.hl_shortcut = "DashboardShortcut"
nvoid.builtin.alpha.dashboard.section.buttons.opts.spacing = 1
nvoid.builtin.alpha.dashboard.section.footer.opts.hl = "DashboardFooter"
nvoid.builtin.alpha.dashboard.section.footer.opts.position = "center"
nvoid.builtin.alpha.dashboard.section.footer.type = "text"
nvoid.builtin.alpha.dashboard.section.footer.val["1"] = "爵nvoid.org"
nvoid.builtin.alpha.dashboard.section.header.opts.hl = "DashboardHeader"
nvoid.builtin.alpha.dashboard.section.header.opts.position = "center"
nvoid.builtin.alpha.dashboard.section.header.type = "text"
nvoid.builtin.alpha.dashboard.section.header.val["1"] = "⠘⢵⢕⢽⡸⣕⢵⢝⡄⠀⠑⡽⡸⡄⠹⡜⣝⡄⠀⠀⠀⠀⠀⡔⡽⡸⠁"
nvoid.builtin.alpha.dashboard.section.header.val["10"] = "   ⠀     ⠀⠘⡵⡝⣆⠀⠘⠁          "
nvoid.builtin.alpha.dashboard.section.header.val["11"] = "   ⠀     ⠀⠀⠘⡺⡜⣆⠀           "
nvoid.builtin.alpha.dashboard.section.header.val["12"] = "            ⠈⢞⠁            "
nvoid.builtin.alpha.dashboard.section.header.val["2"] = "⠀⠈⣗⡳⣉⠈⠸⣕⢝⣄⠀⠘⣝⢮⣂⠙⣜⢮⢆⠀⠀⢀⢜⡎⡗⠁ "
nvoid.builtin.alpha.dashboard.section.header.val["3"] = "⠀⠀⠐⢝⢼⢄⠀⠘⡵⣕⢆⠀⠘⣎⢮⢆⠘⡎⡗⡧⡀⣎⢧⡫⠀  "
nvoid.builtin.alpha.dashboard.section.header.val["4"] = "   ⠈⢳⡹⣢⠀⠘⢮⢝⢦⠀⠈⢮⢳⡱⡈⢗⡕⣗⢕⠇⠀⠀  "
nvoid.builtin.alpha.dashboard.section.header.val["5"] = "   ⠀⠀⢫⢮⣢⠀⠈⢮⢳⢕⡀⠈⢧⢳⢕⡀⢯⢪⠋⠀    "
nvoid.builtin.alpha.dashboard.section.header.val["6"] = "   ⠀⠀⠀⢣⡳⣕⡀⠈⢣⢗⢵⡀⠈⢮⢳⡱⡀⠋⠀     "
nvoid.builtin.alpha.dashboard.section.header.val["7"] = "    ⠀⠀⠀⠱⡵⣱⡀⠀⢫⣣⢳⢄⢠⡳⣹⠕⠀      "
nvoid.builtin.alpha.dashboard.section.header.val["8"] = "   ⠀⠀⠀⠀⠀⠹⣜⢼⡀⠀⠪⡳⡕⣗⢝⠊⠀       "
nvoid.builtin.alpha.dashboard.section.header.val["9"] = "   ⠀     ⠘⡮⡺⡄⠀⠙⡼⣪⠃         "
nvoid.builtin.alpha.mode = "dashboard"
nvoid.builtin.alpha.startify.opts.autostart = true
nvoid.builtin.alpha.startify.section.bottom_buttons.entries["1"]["1"] = "q"
nvoid.builtin.alpha.startify.section.bottom_buttons.entries["1"]["2"] = "Quit"
nvoid.builtin.alpha.startify.section.bottom_buttons.entries["1"]["3"] = "<CMD>quit<CR>"
nvoid.builtin.alpha.startify.section.footer.type = "group"
nvoid.builtin.alpha.startify.section.header.opts.hl = "DashboardHeader"
nvoid.builtin.alpha.startify.section.header.opts.shrink_margin = false
nvoid.builtin.alpha.startify.section.header.type = "text"
nvoid.builtin.alpha.startify.section.header.val["1"] = " "
nvoid.builtin.alpha.startify.section.header.val["2"] = "  _   ___      ______ _____ _____   "
nvoid.builtin.alpha.startify.section.header.val["3"] = " | \\ | \\ \\    / / __ \\_   _|  __ \\  "
nvoid.builtin.alpha.startify.section.header.val["4"] = " |  \\| |\\ \\  / / |  | || | | |  | | "
nvoid.builtin.alpha.startify.section.header.val["5"] = " | . ` | \\ \\/ /| |  | || | | |  | | "
nvoid.builtin.alpha.startify.section.header.val["6"] = " | |\\  |  \\  / | |__| || |_| |__| | "
nvoid.builtin.alpha.startify.section.header.val["7"] = " |_| \\_|   \\/   \\____/_____|_____/  "
nvoid.builtin.alpha.startify.section.header.val["8"] = " "
nvoid.builtin.alpha.startify.section.top_buttons.entries["1"]["1"] = "o"
nvoid.builtin.alpha.startify.section.top_buttons.entries["1"]["2"] = " New File"
nvoid.builtin.alpha.startify.section.top_buttons.entries["1"]["3"] = "<CMD>ene!<CR>"
nvoid.builtin.alpha.startify.section.top_buttons.entries["2"]["1"] = "e"
nvoid.builtin.alpha.startify.section.top_buttons.entries["2"]["2"] = " Configuration"
nvoid.builtin.alpha.startify.section.top_buttons.entries["2"]["3"] = "<CMD>edit /home/ysf/.config/nvoid/config.lua <CR>"
nvoid.builtin.autopairs.active = true
nvoid.builtin.autopairs.check_ts = true
nvoid.builtin.autopairs.disable_filetype["1"] = "TelescopePrompt"
nvoid.builtin.autopairs.disable_filetype["2"] = "spectre_panel"
nvoid.builtin.autopairs.disable_in_macro = false
nvoid.builtin.autopairs.disable_in_visualblock = false
nvoid.builtin.autopairs.enable_afterquote = true
nvoid.builtin.autopairs.enable_check_bracket_line = false
nvoid.builtin.autopairs.enable_moveright = true
nvoid.builtin.autopairs.fast_wrap.chars["1"] = "{"
nvoid.builtin.autopairs.fast_wrap.chars["2"] = "["
nvoid.builtin.autopairs.fast_wrap.chars["3"] = "("
nvoid.builtin.autopairs.fast_wrap.chars["4"] = "\""
nvoid.builtin.autopairs.fast_wrap.chars["5"] = "'"
nvoid.builtin.autopairs.fast_wrap.check_comma = true
nvoid.builtin.autopairs.fast_wrap.end_key = "$"
nvoid.builtin.autopairs.fast_wrap.highlight_grey = "Comment"
nvoid.builtin.autopairs.fast_wrap.highlight = "Search"
nvoid.builtin.autopairs.fast_wrap.keys = "qwertyuiopzxcvbnmasdfghjkl"
nvoid.builtin.autopairs.fast_wrap.map = "<M-e>"
nvoid.builtin.autopairs.fast_wrap.offset = 0
nvoid.builtin.autopairs.fast_wrap.pattern = "[%'%\"%)%>%]%)%}%,]"
nvoid.builtin.autopairs.ignored_next_char = "[%w%%%'%[%\"%.]"
nvoid.builtin.autopairs.map_bs = true
nvoid.builtin.autopairs.map_char.all = "("
nvoid.builtin.autopairs.map_char.tex = "{"
nvoid.builtin.autopairs.map_c_w = false
nvoid.builtin.autopairs.ts_config.java = false
nvoid.builtin.autopairs.ts_config.javascript["1"] = "string"
nvoid.builtin.autopairs.ts_config.javascript["2"] = "template_string"
nvoid.builtin.autopairs.ts_config.lua["1"] = "string"
nvoid.builtin.autopairs.ts_config.lua["2"] = "source"
nvoid.builtin.bigfile.active = true
nvoid.builtin.bufferline.active = true
nvoid.builtin.bufferline.setup.always_show = false
nvoid.builtin.bufferline.setup.icons.close = "󰅖"
nvoid.builtin.bufferline.setup.icons.modified = ""
nvoid.builtin.bufferline.setup.icons.tab = "󰌒"
nvoid.builtin.bufferline.setup.icons.tab_add = ""
nvoid.builtin.bufferline.setup.icons.tab_close = ""
nvoid.builtin.bufferline.setup.icons.tab_toggle = ""
nvoid.builtin.bufferline.setup.icons.unknown_file = ""
nvoid.builtin.bufferline.setup.kind_icons = true
nvoid.builtin.bufferline.setup.show_numbers = false
nvoid.builtin.cmp.active = true
nvoid.builtin.cmp.cmdline.enable = true
nvoid.builtin.cmp.cmdline.options["1"].sources["1"].name = "path"
nvoid.builtin.cmp.cmdline.options["1"].sources["2"].name = "cmdline"
nvoid.builtin.cmp.cmdline.options["1"].type = ":"
nvoid.builtin.cmp.cmdline.options["2"].sources["1"].name = "buffer"
nvoid.builtin.cmp.cmdline.options["2"].type["1"] = "/"
nvoid.builtin.cmp.cmdline.options["2"].type["2"] = "?"
nvoid.builtin.cmp.completion.keyword_length = 1
nvoid.builtin.cmp.confirm_opts.behavior = "replace"
nvoid.builtin.cmp.confirm_opts.select = false
-- nvoid.builtin.cmp.enabled = function ()
nvoid.builtin.cmp.experimental.ghost_text = false
nvoid.builtin.cmp.experimental.native_menu = false
nvoid.builtin.cmp.formatting.fields["1"] = "kind"
nvoid.builtin.cmp.formatting.fields["2"] = "abbr"
nvoid.builtin.cmp.formatting.fields["3"] = "menu"
-- nvoid.builtin.cmp.formatting.format = function ()
nvoid.builtin.cmp.formatting.kind_icons.Array = "[]"
nvoid.builtin.cmp.formatting.kind_icons.Boolean = ""
nvoid.builtin.cmp.formatting.kind_icons.Calendar = ""
nvoid.builtin.cmp.formatting.kind_icons.Class = "󰠱"
nvoid.builtin.cmp.formatting.kind_icons.Codeium = ""
nvoid.builtin.cmp.formatting.kind_icons.Color = "󰏘"
nvoid.builtin.cmp.formatting.kind_icons.Constant = "󰏿"
nvoid.builtin.cmp.formatting.kind_icons.Constructor = ""
nvoid.builtin.cmp.formatting.kind_icons.Copilot = ""
nvoid.builtin.cmp.formatting.kind_icons.Enum = ""
nvoid.builtin.cmp.formatting.kind_icons.EnumMember = ""
nvoid.builtin.cmp.formatting.kind_icons.Event = ""
nvoid.builtin.cmp.formatting.kind_icons.Field = "󰜢"
nvoid.builtin.cmp.formatting.kind_icons.File = "󰈚"
nvoid.builtin.cmp.formatting.kind_icons.Folder = "󰉋"
nvoid.builtin.cmp.formatting.kind_icons.Function = "󰆧"
nvoid.builtin.cmp.formatting.kind_icons.Interface = ""
nvoid.builtin.cmp.formatting.kind_icons.Keyword = "󰌋"
nvoid.builtin.cmp.formatting.kind_icons.Method = "󰆧"
nvoid.builtin.cmp.formatting.kind_icons.Module = ""
nvoid.builtin.cmp.formatting.kind_icons.Namespace = "󰌗"
nvoid.builtin.cmp.formatting.kind_icons.Null = "󰟢"
nvoid.builtin.cmp.formatting.kind_icons.Number = ""
nvoid.builtin.cmp.formatting.kind_icons.Object = "󰅩"
nvoid.builtin.cmp.formatting.kind_icons.Operator = "󰆕"
nvoid.builtin.cmp.formatting.kind_icons.Package = ""
nvoid.builtin.cmp.formatting.kind_icons.Property = "󰜢"
nvoid.builtin.cmp.formatting.kind_icons.Reference = "󰈇"
nvoid.builtin.cmp.formatting.kind_icons.Snippet = ""
nvoid.builtin.cmp.formatting.kind_icons.String = "󰉿"
nvoid.builtin.cmp.formatting.kind_icons.Struct = "󰙅"
nvoid.builtin.cmp.formatting.kind_icons.Table = ""
nvoid.builtin.cmp.formatting.kind_icons.TabNine = ""
nvoid.builtin.cmp.formatting.kind_icons.Tag = ""
nvoid.builtin.cmp.formatting.kind_icons.Text = "󰉿"
nvoid.builtin.cmp.formatting.kind_icons.TypeParameter = "󰊄"
nvoid.builtin.cmp.formatting.kind_icons.Unit = "󰑭"
nvoid.builtin.cmp.formatting.kind_icons.Value = "󰎠"
nvoid.builtin.cmp.formatting.kind_icons.Variable = "󰀫"
nvoid.builtin.cmp.formatting.kind_icons.Watch = "󰥔"
nvoid.builtin.cmp.formatting.source_names.buffer = "(Buffer)"
nvoid.builtin.cmp.formatting.source_names.calc = "(Calc)"
nvoid.builtin.cmp.formatting.source_names.cmp_tabnine = "(Tabnine)"
nvoid.builtin.cmp.formatting.source_names.copilot = "(Copilot)"
nvoid.builtin.cmp.formatting.source_names.emoji = "(Emoji)"
nvoid.builtin.cmp.formatting.source_names.luasnip = "(Snippet)"
nvoid.builtin.cmp.formatting.source_names.nvim_lsp = "(LSP)"
nvoid.builtin.cmp.formatting.source_names.path = "(Path)"
nvoid.builtin.cmp.formatting.source_names.tmux = "(TMUX)"
nvoid.builtin.cmp.formatting.source_names.treesitter = "(TreeSitter)"
nvoid.builtin.cmp.formatting.source_names.vsnip = "(Snippet)"
-- nvoid.builtin.cmp.mapping["<C-D>"] = function ()
-- nvoid.builtin.cmp.mapping["<C-E>"] = function ()
-- nvoid.builtin.cmp.mapping["<C-F>"] = function ()
-- nvoid.builtin.cmp.mapping["<C-J>"].c = function ()
-- nvoid.builtin.cmp.mapping["<C-J>"].i = function ()
-- nvoid.builtin.cmp.mapping["<C-K>"].c = function ()
-- nvoid.builtin.cmp.mapping["<C-K>"].i = function ()
-- nvoid.builtin.cmp.mapping["<C-N>"].i = function ()
-- nvoid.builtin.cmp.mapping["<C-P>"].i = function ()
-- nvoid.builtin.cmp.mapping["<CR>"].i = function ()
-- nvoid.builtin.cmp.mapping["<C-Space>"] = function ()
-- nvoid.builtin.cmp.mapping["<C-Y>"].c = function ()
-- nvoid.builtin.cmp.mapping["<C-Y>"].i = function ()
-- nvoid.builtin.cmp.mapping["<Down>"].i = function ()
-- nvoid.builtin.cmp.mapping["<S-Tab>"].i = function ()
-- nvoid.builtin.cmp.mapping["<S-Tab>"].s = function ()
-- nvoid.builtin.cmp.mapping["<Tab>"].i = function ()
-- nvoid.builtin.cmp.mapping["<Tab>"].s = function ()
-- nvoid.builtin.cmp.mapping["<Up>"].i = function ()
-- nvoid.builtin.cmp.snippet.expand = function ()
nvoid.builtin.cmp.sources["10"].name = "treesitter"
nvoid.builtin.cmp.sources["11"].name = "crates"
nvoid.builtin.cmp.sources["12"].name = "tmux"
nvoid.builtin.cmp.sources["1"].max_item_count = 3
nvoid.builtin.cmp.sources["1"].name = "copilot"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["1"] = "."
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["10"] = "@"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["11"] = "|"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["12"] = "="
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["13"] = "-"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["14"] = "{"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["15"] = "/"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["16"] = "\\"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["17"] = "+"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["18"] = "?"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["19"] = " "
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["2"] = ":"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["3"] = "("
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["4"] = "'"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["5"] = "\""
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["6"] = "["
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["7"] = ","
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["8"] = "#"
nvoid.builtin.cmp.sources["1"].trigger_characters["1"]["9"] = "*"
-- nvoid.builtin.cmp.sources["2"].entry_filter = function ()
nvoid.builtin.cmp.sources["2"].name = "nvim_lsp"
nvoid.builtin.cmp.sources["3"].name = "path"
nvoid.builtin.cmp.sources["4"].name = "luasnip"
nvoid.builtin.cmp.sources["5"].name = "cmp_tabnine"
nvoid.builtin.cmp.sources["6"].name = "nvim_lua"
nvoid.builtin.cmp.sources["7"].name = "buffer"
nvoid.builtin.cmp.sources["8"].name = "calc"
nvoid.builtin.cmp.sources["9"].name = "emoji"
nvoid.builtin.cmp.window.completion.border["1"] = ""
nvoid.builtin.cmp.window.completion.border["2"] = ""
nvoid.builtin.cmp.window.completion.border["3"] = ""
nvoid.builtin.cmp.window.completion.border["4"] = ""
nvoid.builtin.cmp.window.completion.border["5"] = ""
nvoid.builtin.cmp.window.completion.border["6"] = ""
nvoid.builtin.cmp.window.completion.border["7"] = ""
nvoid.builtin.cmp.window.completion.border["8"] = ""
nvoid.builtin.cmp.window.completion.side_padding = 0
nvoid.builtin.cmp.window.completion.winhighlight = "Normal:Pmenu,CursorLine:PmenuSel,FloatBorder:FloatBorder,Search:None"
nvoid.builtin.cmp.window.documentation.border["1"] = ""
nvoid.builtin.cmp.window.documentation.border["2"] = ""
nvoid.builtin.cmp.window.documentation.border["3"] = ""
nvoid.builtin.cmp.window.documentation.border["4"] = ""
nvoid.builtin.cmp.window.documentation.border["5"] = ""
nvoid.builtin.cmp.window.documentation.border["6"] = ""
nvoid.builtin.cmp.window.documentation.border["7"] = ""
nvoid.builtin.cmp.window.documentation.border["8"] = ""
nvoid.builtin.cmp.window.documentation.side_padding = 0
nvoid.builtin.cmp.window.documentation.winhighlight = "Normal:Pmenu,CursorLine:PmenuSel,FloatBorder:FloatBorder,Search:None"
nvoid.builtin.comment.active = true
nvoid.builtin.comment.extra.above = "gcO"
nvoid.builtin.comment.extra.below = "gco"
nvoid.builtin.comment.extra.eol = "gcA"
nvoid.builtin.comment.ignore = "^$"
nvoid.builtin.comment.mappings.basic = true
nvoid.builtin.comment.mappings.extra = true
nvoid.builtin.comment.opleader.block = "gb"
nvoid.builtin.comment.opleader.line = "gc"
nvoid.builtin.comment.padding = true
-- nvoid.builtin.comment.pre_hook = function ()
nvoid.builtin.comment.sticky = true
nvoid.builtin.comment.toggler.block = "gbc"
nvoid.builtin.comment.toggler.line = "gcc"
nvoid.builtin.dap.active = true
nvoid.builtin.dap.breakpoint.linehl = ""
nvoid.builtin.dap.breakpoint.numhl = ""
nvoid.builtin.dap.breakpoint_rejected.linehl = ""
nvoid.builtin.dap.breakpoint_rejected.numhl = ""
nvoid.builtin.dap.breakpoint_rejected.text = ""
nvoid.builtin.dap.breakpoint_rejected.texthl = "DiagnosticSignError"
nvoid.builtin.dap.breakpoint.text = ""
nvoid.builtin.dap.breakpoint.texthl = "DiagnosticSignError"
nvoid.builtin.dap.log.level = "info"
nvoid.builtin.dap.stopped.linehl = "Visual"
nvoid.builtin.dap.stopped.numhl = "DiagnosticSignWarn"
nvoid.builtin.dap.stopped.text = ""
nvoid.builtin.dap.stopped.texthl = "DiagnosticSignWarn"
nvoid.builtin.dap.ui.auto_open = true
nvoid.builtin.dap.ui.config.controls.element = "repl"
nvoid.builtin.dap.ui.config.controls.enabled = true
nvoid.builtin.dap.ui.config.controls.icons.pause = ""
nvoid.builtin.dap.ui.config.controls.icons.play = ""
nvoid.builtin.dap.ui.config.controls.icons.run_last = ""
nvoid.builtin.dap.ui.config.controls.icons.step_back = ""
nvoid.builtin.dap.ui.config.controls.icons.step_into = ""
nvoid.builtin.dap.ui.config.controls.icons.step_out = ""
nvoid.builtin.dap.ui.config.controls.icons.step_over = ""
nvoid.builtin.dap.ui.config.controls.icons.terminate = ""
nvoid.builtin.dap.ui.config.expand_lines = true
nvoid.builtin.dap.ui.config.floating.border = "rounded"
nvoid.builtin.dap.ui.config.floating.mappings.close["1"] = "q"
nvoid.builtin.dap.ui.config.floating.mappings.close["2"] = "<Esc>"
nvoid.builtin.dap.ui.config.floating.max_height = 0.9
nvoid.builtin.dap.ui.config.floating.max_width = 0.5
nvoid.builtin.dap.ui.config.icons.circular = ""
nvoid.builtin.dap.ui.config.icons.collapsed = ""
nvoid.builtin.dap.ui.config.icons.expanded = ""
nvoid.builtin.dap.ui.config.layouts["1"].elements["1"].id = "scopes"
nvoid.builtin.dap.ui.config.layouts["1"].elements["1"].size = 0.33
nvoid.builtin.dap.ui.config.layouts["1"].elements["2"].id = "breakpoints"
nvoid.builtin.dap.ui.config.layouts["1"].elements["2"].size = 0.17
nvoid.builtin.dap.ui.config.layouts["1"].elements["3"].id = "stacks"
nvoid.builtin.dap.ui.config.layouts["1"].elements["3"].size = 0.25
nvoid.builtin.dap.ui.config.layouts["1"].elements["4"].id = "watches"
nvoid.builtin.dap.ui.config.layouts["1"].elements["4"].size = 0.25
nvoid.builtin.dap.ui.config.layouts["1"].position = "right"
nvoid.builtin.dap.ui.config.layouts["1"].size = 0.33
nvoid.builtin.dap.ui.config.layouts["2"].elements["1"].id = "repl"
nvoid.builtin.dap.ui.config.layouts["2"].elements["1"].size = 0.45
nvoid.builtin.dap.ui.config.layouts["2"].elements["2"].id = "console"
nvoid.builtin.dap.ui.config.layouts["2"].elements["2"].size = 0.55
nvoid.builtin.dap.ui.config.layouts["2"].position = "bottom"
nvoid.builtin.dap.ui.config.layouts["2"].size = 0.27
nvoid.builtin.dap.ui.config.mappings.edit = "e"
nvoid.builtin.dap.ui.config.mappings.expand["1"] = "<CR>"
nvoid.builtin.dap.ui.config.mappings.expand["2"] = "<2-LeftMouse>"
nvoid.builtin.dap.ui.config.mappings.open = "o"
nvoid.builtin.dap.ui.config.mappings.remove = "d"
nvoid.builtin.dap.ui.config.mappings.repl = "r"
nvoid.builtin.dap.ui.config.mappings.toggle = "t"
nvoid.builtin.dap.ui.config.render.max_value_lines = 100
nvoid.builtin.dap.ui.config.windows.indent = 1
nvoid.builtin.dap.ui.notify.threshold = 2
nvoid.builtin.gitsigns.active = true
nvoid.builtin.gitsigns.opts.attach_to_untracked = true
nvoid.builtin.gitsigns.opts.current_line_blame = false
nvoid.builtin.gitsigns.opts.current_line_blame_formatter_opts.relative_time = false
nvoid.builtin.gitsigns.opts.current_line_blame_opts.delay = 1000
nvoid.builtin.gitsigns.opts.current_line_blame_opts.ignore_whitespace = false
nvoid.builtin.gitsigns.opts.current_line_blame_opts.virt_text_pos = "eol"
nvoid.builtin.gitsigns.opts.current_line_blame_opts.virt_text = true
nvoid.builtin.gitsigns.opts.linehl = false
nvoid.builtin.gitsigns.opts.max_file_length = 40000
nvoid.builtin.gitsigns.opts.numhl = false
nvoid.builtin.gitsigns.opts.preview_config.border = "single"
nvoid.builtin.gitsigns.opts.preview_config.col = 1
nvoid.builtin.gitsigns.opts.preview_config.relative = "cursor"
nvoid.builtin.gitsigns.opts.preview_config.row = 0
nvoid.builtin.gitsigns.opts.preview_config.style = "minimal"
nvoid.builtin.gitsigns.opts.signcolumn = true
nvoid.builtin.gitsigns.opts.sign_priority = 6
nvoid.builtin.gitsigns.opts.signs.add.hl = "GitSignsAdd"
nvoid.builtin.gitsigns.opts.signs.add.linehl = "GitSignsAddLn"
nvoid.builtin.gitsigns.opts.signs.add.numhl = "GitSignsAddNr"
nvoid.builtin.gitsigns.opts.signs.add.text = "▎"
nvoid.builtin.gitsigns.opts.signs.changedelete.hl = "GitSignsChange"
nvoid.builtin.gitsigns.opts.signs.changedelete.linehl = "GitSignsChangeLn"
nvoid.builtin.gitsigns.opts.signs.changedelete.numhl = "GitSignsChangeNr"
nvoid.builtin.gitsigns.opts.signs.changedelete.text = "▎"
nvoid.builtin.gitsigns.opts.signs.change.hl = "GitSignsChange"
nvoid.builtin.gitsigns.opts.signs.change.linehl = "GitSignsChangeLn"
nvoid.builtin.gitsigns.opts.signs.change.numhl = "GitSignsChangeNr"
nvoid.builtin.gitsigns.opts.signs.change.text = "▎"
nvoid.builtin.gitsigns.opts.signs.delete.hl = "GitSignsDelete"
nvoid.builtin.gitsigns.opts.signs.delete.linehl = "GitSignsDeleteLn"
nvoid.builtin.gitsigns.opts.signs.delete.numhl = "GitSignsDeleteNr"
nvoid.builtin.gitsigns.opts.signs.delete.text = "󰐊"
nvoid.builtin.gitsigns.opts.signs.topdelete.hl = "GitSignsDelete"
nvoid.builtin.gitsigns.opts.signs.topdelete.linehl = "GitSignsDeleteLn"
nvoid.builtin.gitsigns.opts.signs.topdelete.numhl = "GitSignsDeleteNr"
nvoid.builtin.gitsigns.opts.signs.topdelete.text = "󰐊"
nvoid.builtin.gitsigns.opts.update_debounce = 200
nvoid.builtin.gitsigns.opts.watch_gitdir.follow_files = true
nvoid.builtin.gitsigns.opts.watch_gitdir.interval = 1000
nvoid.builtin.gitsigns.opts.word_diff = false
nvoid.builtin.gitsigns.opts.yadm.enable = false
nvoid.builtin.illuminate.active = true
nvoid.builtin.illuminate.options.delay = 120
nvoid.builtin.illuminate.options.filetypes_denylist["10"] = "spectre_panel"
nvoid.builtin.illuminate.options.filetypes_denylist["11"] = "toggleterm"
nvoid.builtin.illuminate.options.filetypes_denylist["12"] = "DressingSelect"
nvoid.builtin.illuminate.options.filetypes_denylist["13"] = "TelescopePrompt"
nvoid.builtin.illuminate.options.filetypes_denylist["1"] = "dirvish"
nvoid.builtin.illuminate.options.filetypes_denylist["2"] = "fugitive"
nvoid.builtin.illuminate.options.filetypes_denylist["3"] = "alpha"
nvoid.builtin.illuminate.options.filetypes_denylist["4"] = "NvimTree"
nvoid.builtin.illuminate.options.filetypes_denylist["5"] = "lazy"
nvoid.builtin.illuminate.options.filetypes_denylist["6"] = "neogitstatus"
nvoid.builtin.illuminate.options.filetypes_denylist["7"] = "Trouble"
nvoid.builtin.illuminate.options.filetypes_denylist["8"] = "lir"
nvoid.builtin.illuminate.options.filetypes_denylist["9"] = "Outline"
nvoid.builtin.illuminate.options.providers["1"] = "lsp"
nvoid.builtin.illuminate.options.providers["2"] = "treesitter"
nvoid.builtin.illuminate.options.providers["3"] = "regex"
nvoid.builtin.illuminate.options.under_cursor = true
nvoid.builtin.indentlines.active = true
nvoid.builtin.indentlines.options.buftype_exclude["1"] = "terminal"
nvoid.builtin.indentlines.options.buftype_exclude["2"] = "nofile"
nvoid.builtin.indentlines.options.char = "▏"
nvoid.builtin.indentlines.options.context_char = "▏"
nvoid.builtin.indentlines.options.enabled = true
nvoid.builtin.indentlines.options.filetype_exclude["1"] = "help"
nvoid.builtin.indentlines.options.filetype_exclude["2"] = "startify"
nvoid.builtin.indentlines.options.filetype_exclude["3"] = "dashboard"
nvoid.builtin.indentlines.options.filetype_exclude["4"] = "lazy"
nvoid.builtin.indentlines.options.filetype_exclude["5"] = "neogitstatus"
nvoid.builtin.indentlines.options.filetype_exclude["6"] = "NvimTree"
nvoid.builtin.indentlines.options.filetype_exclude["7"] = "Trouble"
nvoid.builtin.indentlines.options.filetype_exclude["8"] = "text"
nvoid.builtin.indentlines.options.show_current_context = true
nvoid.builtin.indentlines.options.show_first_indent_level = true
nvoid.builtin.indentlines.options.show_trailing_blankline_indent = false
nvoid.builtin.indentlines.options.use_treesitter = true
nvoid.builtin.luasnip.sources.friendly_snippets = true
nvoid.builtin.mason.github.download_url_template = "https://github.com/%s/releases/download/%s/%s"
nvoid.builtin.mason.icons.package_installed = "◍"
nvoid.builtin.mason.icons.package_pending = "◍"
nvoid.builtin.mason.icons.package_uninstalled = "◍"
nvoid.builtin.mason.install_root_dir = "/home/ysf/.local/share/nvoid/mason"
nvoid.builtin.mason.log_level = 2
nvoid.builtin.mason.max_concurrent_installers = 4
nvoid.builtin.mason.PATH = "skip"
nvoid.builtin.mason.pip.upgrade_pip = false
nvoid.builtin.mason.providers["1"] = "mason.providers.registry-api"
nvoid.builtin.mason.providers["2"] = "mason.providers.client"
nvoid.builtin.mason.registries["1"] = "lua:mason-registry.index"
nvoid.builtin.mason.registries["2"] = "github:mason-org/mason-registry"
nvoid.builtin.mason.ui.border = "single"
nvoid.builtin.mason.ui.check_outdated_packages_on_open = true
nvoid.builtin.mason.ui.height = 0.9
nvoid.builtin.mason.ui.keymaps.apply_language_filter = "<C-f>"
nvoid.builtin.mason.ui.keymaps.cancel_installation = "<C-c>"
nvoid.builtin.mason.ui.keymaps.check_outdated_packages = "C"
nvoid.builtin.mason.ui.keymaps.check_package_version = "c"
nvoid.builtin.mason.ui.keymaps.install_package = "i"
nvoid.builtin.mason.ui.keymaps.toggle_package_expand = "<CR>"
nvoid.builtin.mason.ui.keymaps.uninstall_package = "X"
nvoid.builtin.mason.ui.keymaps.update_all_packages = "U"
nvoid.builtin.mason.ui.keymaps.update_package = "u"
nvoid.builtin.mason.ui.width = 0.8
nvoid.builtin.nvimtree.active = true
nvoid.builtin.nvimtree.setup.actions.change_dir.enable = true
nvoid.builtin.nvimtree.setup.actions.change_dir.global = false
nvoid.builtin.nvimtree.setup.actions.change_dir.restrict_above_cwd = false
nvoid.builtin.nvimtree.setup.actions.expand_all.max_folder_discovery = 300
nvoid.builtin.nvimtree.setup.actions.file_popup.open_win_config.border = "shadow"
nvoid.builtin.nvimtree.setup.actions.file_popup.open_win_config.col = 1
nvoid.builtin.nvimtree.setup.actions.file_popup.open_win_config.relative = "cursor"
nvoid.builtin.nvimtree.setup.actions.file_popup.open_win_config.row = 1
nvoid.builtin.nvimtree.setup.actions.file_popup.open_win_config.style = "minimal"
nvoid.builtin.nvimtree.setup.actions.open_file.quit_on_open = false
nvoid.builtin.nvimtree.setup.actions.open_file.resize_window = false
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.enable = true
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["1"] = "nofile"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["2"] = "terminal"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.buftype["3"] = "help"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["1"] = "notify"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["2"] = "lazy"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["3"] = "qf"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["4"] = "diff"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["5"] = "fugitive"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.exclude.filetype["6"] = "fugitiveblame"
nvoid.builtin.nvimtree.setup.actions.open_file.window_picker.picker = "default"
nvoid.builtin.nvimtree.setup.actions.remove_file.close_window = true
nvoid.builtin.nvimtree.setup.actions.use_system_clipboard = true
nvoid.builtin.nvimtree.setup.auto_reload_on_write = false
nvoid.builtin.nvimtree.setup.diagnostics.debounce_delay = 50
nvoid.builtin.nvimtree.setup.diagnostics.enable = true
nvoid.builtin.nvimtree.setup.diagnostics.icons.error = ""
nvoid.builtin.nvimtree.setup.diagnostics.icons.hint = ""
nvoid.builtin.nvimtree.setup.diagnostics.icons.info = ""
nvoid.builtin.nvimtree.setup.diagnostics.icons.warning = ""
nvoid.builtin.nvimtree.setup.diagnostics.severity.max = 1
nvoid.builtin.nvimtree.setup.diagnostics.severity.min = 4
nvoid.builtin.nvimtree.setup.diagnostics.show_on_dirs = true
nvoid.builtin.nvimtree.setup.diagnostics.show_on_open_dirs = true
nvoid.builtin.nvimtree.setup.disable_netrw = false
nvoid.builtin.nvimtree.setup.filesystem_watchers.debounce_delay = 50
nvoid.builtin.nvimtree.setup.filesystem_watchers.enable = true
nvoid.builtin.nvimtree.setup.filters.custom["1"] = "node_modules"
nvoid.builtin.nvimtree.setup.filters.custom["2"] = "\\.cache"
nvoid.builtin.nvimtree.setup.filters.dotfiles = false
nvoid.builtin.nvimtree.setup.filters.git_clean = false
nvoid.builtin.nvimtree.setup.filters.no_buffer = false
nvoid.builtin.nvimtree.setup.git.enable = true
nvoid.builtin.nvimtree.setup.git.ignore = false
nvoid.builtin.nvimtree.setup.git.show_on_dirs = true
nvoid.builtin.nvimtree.setup.git.show_on_open_dirs = true
nvoid.builtin.nvimtree.setup.git.timeout = 200
nvoid.builtin.nvimtree.setup.hijack_cursor = false
nvoid.builtin.nvimtree.setup.hijack_directories.auto_open = true
nvoid.builtin.nvimtree.setup.hijack_directories.enable = false
nvoid.builtin.nvimtree.setup.hijack_netrw = true
nvoid.builtin.nvimtree.setup.hijack_unnamed_buffer_when_opening = false
nvoid.builtin.nvimtree.setup.live_filter.always_show_folders = true
nvoid.builtin.nvimtree.setup.live_filter.prefix = "[FILTER]: "
nvoid.builtin.nvimtree.setup.log.enable = false
nvoid.builtin.nvimtree.setup.log.truncate = false
nvoid.builtin.nvimtree.setup.log.types.all = false
nvoid.builtin.nvimtree.setup.log.types.config = false
nvoid.builtin.nvimtree.setup.log.types.copy_paste = false
nvoid.builtin.nvimtree.setup.log.types.dev = false
nvoid.builtin.nvimtree.setup.log.types.diagnostics = false
nvoid.builtin.nvimtree.setup.log.types.git = false
nvoid.builtin.nvimtree.setup.log.types.profile = false
nvoid.builtin.nvimtree.setup.log.types.watcher = false
nvoid.builtin.nvimtree.setup.notify.threshold = 2
nvoid.builtin.nvimtree.setup.on_attach = "default"
nvoid.builtin.nvimtree.setup.prefer_startup_root = false
nvoid.builtin.nvimtree.setup.reload_on_bufenter = false
nvoid.builtin.nvimtree.setup.renderer.add_trailing = false
nvoid.builtin.nvimtree.setup.renderer.full_name = false
nvoid.builtin.nvimtree.setup.renderer.group_empty = false
nvoid.builtin.nvimtree.setup.renderer.highlight_git = true
nvoid.builtin.nvimtree.setup.renderer.highlight_opened_files = "none"
nvoid.builtin.nvimtree.setup.renderer.icons.git_placement = "before"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.bookmark = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.default = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.arrow_closed = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.arrow_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.default = "󰉋"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.empty_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.symlink = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.folder.symlink_open = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.deleted = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.ignored = "◌"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.renamed = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.staged = "S"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.unmerged = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.unstaged = ""
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.git.untracked = "U"
nvoid.builtin.nvimtree.setup.renderer.icons.glyphs.symlink = ""
nvoid.builtin.nvimtree.setup.renderer.icons.padding = " "
nvoid.builtin.nvimtree.setup.renderer.icons.show.file = true
nvoid.builtin.nvimtree.setup.renderer.icons.show.folder_arrow = true
nvoid.builtin.nvimtree.setup.renderer.icons.show.folder = true
nvoid.builtin.nvimtree.setup.renderer.icons.show.git = true
nvoid.builtin.nvimtree.setup.renderer.icons.symlink_arrow = " ➛ "
nvoid.builtin.nvimtree.setup.renderer.icons.webdev_colors = true
nvoid.builtin.nvimtree.setup.renderer.indent_markers.enable = false
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.corner = "└"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.edge = "│"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.item = "│"
nvoid.builtin.nvimtree.setup.renderer.indent_markers.icons.none = " "
nvoid.builtin.nvimtree.setup.renderer.indent_markers.inline_arrows = true
nvoid.builtin.nvimtree.setup.renderer.indent_width = 2
nvoid.builtin.nvimtree.setup.renderer.root_folder_label = ":t"
nvoid.builtin.nvimtree.setup.renderer.special_files["1"] = "Cargo.toml"
nvoid.builtin.nvimtree.setup.renderer.special_files["2"] = "Makefile"
nvoid.builtin.nvimtree.setup.renderer.special_files["3"] = "README.md"
nvoid.builtin.nvimtree.setup.renderer.special_files["4"] = "readme.md"
nvoid.builtin.nvimtree.setup.renderer.symlink_destination = true
nvoid.builtin.nvimtree.setup.respect_buf_cwd = true
nvoid.builtin.nvimtree.setup.select_prompts = false
nvoid.builtin.nvimtree.setup.sort_by = "name"
nvoid.builtin.nvimtree.setup.sync_root_with_cwd = true
nvoid.builtin.nvimtree.setup.tab.sync.close = false
nvoid.builtin.nvimtree.setup.tab.sync.open = false
nvoid.builtin.nvimtree.setup.trash.cmd = "trash"
nvoid.builtin.nvimtree.setup.trash.require_confirm = true
nvoid.builtin.nvimtree.setup.update_focused_file.debounce_delay = 15
nvoid.builtin.nvimtree.setup.update_focused_file.enable = true
nvoid.builtin.nvimtree.setup.update_focused_file.update_root = true
nvoid.builtin.nvimtree.setup.view.adaptive_size = false
nvoid.builtin.nvimtree.setup.view.centralize_selection = true
nvoid.builtin.nvimtree.setup.view.float.enable = false
nvoid.builtin.nvimtree.setup.view.float.open_win_config.border = "single"
nvoid.builtin.nvimtree.setup.view.float.open_win_config.col = 1
nvoid.builtin.nvimtree.setup.view.float.open_win_config.height = 30
nvoid.builtin.nvimtree.setup.view.float.open_win_config.relative = "editor"
nvoid.builtin.nvimtree.setup.view.float.open_win_config.row = 1
nvoid.builtin.nvimtree.setup.view.float.open_win_config.width = 30
nvoid.builtin.nvimtree.setup.view.float.quit_on_focus_loss = true
nvoid.builtin.nvimtree.setup.view.number = false
nvoid.builtin.nvimtree.setup.view.preserve_window_proportions = false
nvoid.builtin.nvimtree.setup.view.relativenumber = false
nvoid.builtin.nvimtree.setup.view.side = "left"
nvoid.builtin.nvimtree.setup.view.signcolumn = "yes"
nvoid.builtin.nvimtree.setup.view.width = 30
nvoid.builtin.telescope.active = true
nvoid.builtin.telescope.defaults.borderchars["1"] = "─"
nvoid.builtin.telescope.defaults.borderchars["2"] = "│"
nvoid.builtin.telescope.defaults.borderchars["3"] = "─"
nvoid.builtin.telescope.defaults.borderchars["4"] = "│"
nvoid.builtin.telescope.defaults.borderchars["5"] = "┌"
nvoid.builtin.telescope.defaults.borderchars["6"] = "┐"
nvoid.builtin.telescope.defaults.borderchars["7"] = "┘"
nvoid.builtin.telescope.defaults.borderchars["8"] = "└"
nvoid.builtin.telescope.defaults.color_devicons = true
nvoid.builtin.telescope.defaults.entry_prefix = "  "
nvoid.builtin.telescope.defaults.initial_mode = "insert"
nvoid.builtin.telescope.defaults.layout_config.horizontal.mirror = false
-- nvoid.builtin.telescope.defaults.layout_config.horizontal.preview_width = function ()
nvoid.builtin.telescope.defaults.layout_config.preview_cutoff = 120
nvoid.builtin.telescope.defaults.layout_config.vertical.mirror = false
nvoid.builtin.telescope.defaults.layout_config.width = 0.75
nvoid.builtin.telescope.defaults.layout_strategy = "horizontal"
-- nvoid.builtin.telescope.defaults.mappings.i["<C-c>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-j>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-k>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-n>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-p>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<C-q>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.i["<CR>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.n["<C-n>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.n["<C-p>"] = function ()
-- nvoid.builtin.telescope.defaults.mappings.n["<C-q>"] = function ()
nvoid.builtin.telescope.defaults.path_display["1"] = "smart"
nvoid.builtin.telescope.defaults.prompt_prefix = " "
nvoid.builtin.telescope.defaults.selection_caret = " "
nvoid.builtin.telescope.defaults.selection_strategy = "reset"
nvoid.builtin.telescope.defaults.set_env.COLORTERM = "truecolor"
nvoid.builtin.telescope.defaults.vimgrep_arguments["1"] = "rg"
nvoid.builtin.telescope.defaults.vimgrep_arguments["2"] = "--color=never"
nvoid.builtin.telescope.defaults.vimgrep_arguments["3"] = "--no-heading"
nvoid.builtin.telescope.defaults.vimgrep_arguments["4"] = "--with-filename"
nvoid.builtin.telescope.defaults.vimgrep_arguments["5"] = "--line-number"
nvoid.builtin.telescope.defaults.vimgrep_arguments["6"] = "--column"
nvoid.builtin.telescope.defaults.vimgrep_arguments["7"] = "--smart-case"
nvoid.builtin.telescope.defaults.vimgrep_arguments["8"] = "--hidden"
nvoid.builtin.telescope.defaults.vimgrep_arguments["9"] = "--glob=!.git/"
nvoid.builtin.telescope.defaults.winblend = 0
-- nvoid.builtin.telescope.file_previewer = function ()
-- nvoid.builtin.telescope.file_sorter = function ()
-- nvoid.builtin.telescope.generic_sorter = function ()
-- nvoid.builtin.telescope.grep_previewer = function ()
nvoid.builtin.telescope.pickers.buffers.initial_mode = "normal"
-- nvoid.builtin.telescope.pickers.buffers.mappings.i["<C-d>"] = function ()
-- nvoid.builtin.telescope.pickers.buffers.mappings.n.dd = function ()
nvoid.builtin.telescope.pickers.colorscheme.enable_preview = true
nvoid.builtin.telescope.pickers.find_files.hidden = true
nvoid.builtin.telescope.pickers.git_files.hidden = true
nvoid.builtin.telescope.pickers.git_files.show_untracked = true
nvoid.builtin.telescope.pickers.grep_string.only_sort_text = true
nvoid.builtin.telescope.pickers.live_grep.only_sort_text = true
nvoid.builtin.telescope.pickers.planets.show_moon = true
nvoid.builtin.telescope.pickers.planets.show_pluto = true
-- nvoid.builtin.telescope.qflist_previewer = function ()
nvoid.builtin.telescope.theme = "center"
nvoid.builtin.terminal.active = true
nvoid.builtin.terminal.close_on_exit = true
nvoid.builtin.terminal.direction = "float"
nvoid.builtin.terminal.execs["1"]["2"] = "<M-1>"
nvoid.builtin.terminal.execs["1"]["3"] = "Horizontal Terminal"
nvoid.builtin.terminal.execs["1"]["4"] = "horizontal"
nvoid.builtin.terminal.execs["1"]["5"] = 0.3
nvoid.builtin.terminal.execs["2"]["2"] = "<M-2>"
nvoid.builtin.terminal.execs["2"]["3"] = "Vertical Terminal"
nvoid.builtin.terminal.execs["2"]["4"] = "vertical"
nvoid.builtin.terminal.execs["2"]["5"] = 0.4
nvoid.builtin.terminal.execs["3"]["2"] = "<M-3>"
nvoid.builtin.terminal.execs["3"]["3"] = "Float Terminal"
nvoid.builtin.terminal.execs["3"]["4"] = "float"
nvoid.builtin.terminal.float_opts.border = "single"
nvoid.builtin.terminal.float_opts.highlights.background = "Normal"
nvoid.builtin.terminal.float_opts.highlights.border = "Normal"
nvoid.builtin.terminal.float_opts.winblend = 0
nvoid.builtin.terminal.hide_numbers = true
nvoid.builtin.terminal.insert_mappings = true
nvoid.builtin.terminal.open_mapping = "<c-t>"
nvoid.builtin.terminal.persist_size = false
nvoid.builtin.terminal.shade_terminals = true
nvoid.builtin.terminal.shading_factor = 2
nvoid.builtin.terminal.size = 20
nvoid.builtin.terminal.start_in_insert = true
nvoid.builtin.treesitter.auto_install = true
nvoid.builtin.treesitter.autotag.enable = false
nvoid.builtin.treesitter.context_commentstring.config.css = "/* %s */"
nvoid.builtin.treesitter.context_commentstring.config.html = "<!-- %s -->"
nvoid.builtin.treesitter.context_commentstring.config.json = ""
nvoid.builtin.treesitter.context_commentstring.config.scss = "/* %s */"
nvoid.builtin.treesitter.context_commentstring.config.svelte = "<!-- %s -->"
nvoid.builtin.treesitter.context_commentstring.config.typescript = "// %s"
nvoid.builtin.treesitter.context_commentstring.config.vue = "<!-- %s -->"
nvoid.builtin.treesitter.context_commentstring.enable_autocmd = false
nvoid.builtin.treesitter.context_commentstring.enable = true
nvoid.builtin.treesitter.ensure_installed["10"] = "css"
nvoid.builtin.treesitter.ensure_installed["11"] = "rust"
nvoid.builtin.treesitter.ensure_installed["12"] = "java"
nvoid.builtin.treesitter.ensure_installed["13"] = "yaml"
nvoid.builtin.treesitter.ensure_installed["14"] = "fish"
nvoid.builtin.treesitter.ensure_installed["15"] = "query"
nvoid.builtin.treesitter.ensure_installed["16"] = "html"
nvoid.builtin.treesitter.ensure_installed["1"] = "bash"
nvoid.builtin.treesitter.ensure_installed["2"] = "c"
nvoid.builtin.treesitter.ensure_installed["3"] = "javascript"
nvoid.builtin.treesitter.ensure_installed["4"] = "json"
nvoid.builtin.treesitter.ensure_installed["5"] = "lua"
nvoid.builtin.treesitter.ensure_installed["6"] = "vim"
nvoid.builtin.treesitter.ensure_installed["7"] = "python"
nvoid.builtin.treesitter.ensure_installed["8"] = "typescript"
nvoid.builtin.treesitter.ensure_installed["9"] = "tsx"
nvoid.builtin.treesitter.highlight.additional_vim_regex_highlighting = false
-- nvoid.builtin.treesitter.highlight.disable = function ()
nvoid.builtin.treesitter.highlight.enabled = true
nvoid.builtin.treesitter.highlight.enable = true
nvoid.builtin.treesitter.ignore_install["1"] = "haskell"
nvoid.builtin.treesitter.indent.disable["1"] = "yaml"
nvoid.builtin.treesitter.indent.disable["2"] = "python"
nvoid.builtin.treesitter.indent.enable = true
nvoid.builtin.treesitter.matchup.enable = false
nvoid.builtin.treesitter.playground.enable = false
nvoid.builtin.treesitter.playground.keybindings.focus_language = "f"
nvoid.builtin.treesitter.playground.keybindings.goto_node = "<cr>"
nvoid.builtin.treesitter.playground.keybindings.show_help = "?"
nvoid.builtin.treesitter.playground.keybindings.toggle_anonymous_nodes = "a"
nvoid.builtin.treesitter.playground.keybindings.toggle_hl_groups = "i"
nvoid.builtin.treesitter.playground.keybindings.toggle_injected_languages = "t"
nvoid.builtin.treesitter.playground.keybindings.toggle_language_display = "I"
nvoid.builtin.treesitter.playground.keybindings.toggle_query_editor = "o"
nvoid.builtin.treesitter.playground.keybindings.unfocus_language = "F"
nvoid.builtin.treesitter.playground.keybindings.update = "R"
nvoid.builtin.treesitter.playground.persist_queries = false
nvoid.builtin.treesitter.playground.updatetime = 25
nvoid.builtin.treesitter.rainbow.enable = false
nvoid.builtin.treesitter.rainbow.extended_mode = true
nvoid.builtin.treesitter.rainbow.max_file_lines = 1000
nvoid.builtin.treesitter.sync_install = false
nvoid.builtin.treesitter.textobjects.select.enable = false
nvoid.builtin.treesitter.textobjects.swap.enable = false
nvoid.builtin.treesitter.textsubjects.enable = false
nvoid.builtin.treesitter.textsubjects.keymaps[";"] = "textsubjects-big"
nvoid.builtin.treesitter.textsubjects.keymaps["."] = "textsubjects-smart"
nvoid.builtin.which_key.active = true
nvoid.builtin.which_key.mappings["/"]["1"] = "<Plug>(comment_toggle_linewise_current)"
nvoid.builtin.which_key.mappings["/"]["2"] = "/ Comment"
nvoid.builtin.which_key.mappings.b["1"] = "<cmd>lua require('telescope.builtin').buffers(require('telescope.themes').get_dropdown{previewer = false, initial_mode='normal'})<CR>"
nvoid.builtin.which_key.mappings.b["2"] = " Buffer"
nvoid.builtin.which_key.mappings.d.b["1"] = "<cmd>lua require'dap'.step_back()<cr>"
nvoid.builtin.which_key.mappings.d.b["2"] = "Step Back"
nvoid.builtin.which_key.mappings.d.c["1"] = "<cmd>lua require'dap'.continue()<cr>"
nvoid.builtin.which_key.mappings.d.C["1"] = "<cmd>lua require'dap'.run_to_cursor()<cr>"
nvoid.builtin.which_key.mappings.d.c["2"] = "Continue"
nvoid.builtin.which_key.mappings.d.C["2"] = "Run To Cursor"
nvoid.builtin.which_key.mappings.d.d["1"] = "<cmd>lua require'dap'.disconnect()<cr>"
nvoid.builtin.which_key.mappings.d.d["2"] = "Disconnect"
nvoid.builtin.which_key.mappings.d.g["1"] = "<cmd>lua require'dap'.session()<cr>"
nvoid.builtin.which_key.mappings.d.g["2"] = "Get Session"
nvoid.builtin.which_key.mappings.d.i["1"] = "<cmd>lua require'dap'.step_into()<cr>"
nvoid.builtin.which_key.mappings.d.i["2"] = "Step Into"
nvoid.builtin.which_key.mappings.d.name = "  Debug"
nvoid.builtin.which_key.mappings.d.o["1"] = "<cmd>lua require'dap'.step_over()<cr>"
nvoid.builtin.which_key.mappings.d.o["2"] = "Step Over"
nvoid.builtin.which_key.mappings.d.p["1"] = "<cmd>lua require'dap'.pause()<cr>"
nvoid.builtin.which_key.mappings.d.p["2"] = "Pause"
nvoid.builtin.which_key.mappings.d.q["1"] = "<cmd>lua require'dap'.close()<cr>"
nvoid.builtin.which_key.mappings.d.q["2"] = "Quit"
nvoid.builtin.which_key.mappings.d.r["1"] = "<cmd>lua require'dap'.repl.toggle()<cr>"
nvoid.builtin.which_key.mappings.d.r["2"] = "Toggle Repl"
nvoid.builtin.which_key.mappings.d.s["1"] = "<cmd>lua require'dap'.continue()<cr>"
nvoid.builtin.which_key.mappings.d.s["2"] = "Start"
nvoid.builtin.which_key.mappings.d.t["1"] = "<cmd>lua require'dap'.toggle_breakpoint()<cr>"
nvoid.builtin.which_key.mappings.d.t["2"] = "Toggle Breakpoint"
nvoid.builtin.which_key.mappings.d.u["1"] = "<cmd>lua require'dap'.step_out()<cr>"
nvoid.builtin.which_key.mappings.d.U["1"] = "<cmd>lua require'dapui'.toggle({reset = true})<cr>"
nvoid.builtin.which_key.mappings.d.u["2"] = "Step Out"
nvoid.builtin.which_key.mappings.d.U["2"] = "Toggle UI"
nvoid.builtin.which_key.mappings.e["1"] = "<cmd>NvimTreeToggle<cr>"
nvoid.builtin.which_key.mappings.e["2"] = " Explorer"
nvoid.builtin.which_key.mappings.f.b["1"] = "<cmd>lua require 'telescope'.extensions.file_browser.file_browser(require('telescope.themes').get_ivy{previewer = true})<cr>"
nvoid.builtin.which_key.mappings.f.b["2"] = "File Browser"
nvoid.builtin.which_key.mappings.f.c["1"] = "<cmd>Telescope themes<cr>"
nvoid.builtin.which_key.mappings.f.c["2"] = "Change Colors"
nvoid.builtin.which_key.mappings.f.f["1"] = "<cmd>Telescope find_files<cr>"
nvoid.builtin.which_key.mappings.f.f["2"] = "Find files"
nvoid.builtin.which_key.mappings.f.H["1"] = "<cmd>Telescope help_tags<cr>"
nvoid.builtin.which_key.mappings.f.h["1"] = "<cmd>Telescope oldfiles<cr>"
nvoid.builtin.which_key.mappings.f.H["2"] = "CMD Help"
nvoid.builtin.which_key.mappings.f.h["2"] = "Old Files"
nvoid.builtin.which_key.mappings.f.k["1"] = "<cmd>Telescope keymaps<cr>"
nvoid.builtin.which_key.mappings.f.k["2"] = "Key maps"
nvoid.builtin.which_key.mappings.f.m["1"] = "<cmd>Telescope media_files<cr>"
nvoid.builtin.which_key.mappings.f.m["2"] = "Media Files"
nvoid.builtin.which_key.mappings.f.name = "  Find"
nvoid.builtin.which_key.mappings.f.o["1"] = "<cmd>Telescope vim_options<cr>"
nvoid.builtin.which_key.mappings.f.o["2"] = "Options"
nvoid.builtin.which_key.mappings.f.p["1"] = "<cmd>Telescope projects<cr>"
nvoid.builtin.which_key.mappings.f.p["2"] = "Projects"
nvoid.builtin.which_key.mappings.f.t["1"] = "<cmd>Telescope filetypes<cr>"
nvoid.builtin.which_key.mappings.f.t["2"] = "File Types"
nvoid.builtin.which_key.mappings.f.w["1"] = "<cmd>Telescope current_buffer_fuzzy_find<cr>"
nvoid.builtin.which_key.mappings.f.w["2"] = "Find Word In Document"
nvoid.builtin.which_key.mappings.g.g["1"] = "<cmd>Gitsigns toggle_signs<cr>"
nvoid.builtin.which_key.mappings.g.g["2"] = "Toggle GitSigns"
nvoid.builtin.which_key.mappings.g.j["1"] = "<cmd>lua require 'gitsigns'.next_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.j["2"] = "Next Hunk"
nvoid.builtin.which_key.mappings.g.k["1"] = "<cmd>lua require 'gitsigns'.prev_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.k["2"] = "Prev Hunk"
nvoid.builtin.which_key.mappings.g.l["1"] = "<cmd>lua require 'gitsigns'.blame_line()<cr>"
nvoid.builtin.which_key.mappings.g.l["2"] = "Blame"
nvoid.builtin.which_key.mappings.g.name = "  Git"
nvoid.builtin.which_key.mappings.g.p["1"] = "<cmd>lua require 'gitsigns'.preview_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.p["2"] = "Preview Hunk"
nvoid.builtin.which_key.mappings.g.R["1"] = "<cmd>lua require 'gitsigns'.reset_buffer()<cr>"
nvoid.builtin.which_key.mappings.g.r["1"] = "<cmd>lua require 'gitsigns'.reset_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.R["2"] = "Reset Buffer"
nvoid.builtin.which_key.mappings.g.r["2"] = "Reset Hunk"
nvoid.builtin.which_key.mappings.g.s["1"] = "<cmd>lua require 'gitsigns'.stage_hunk()<cr>"
nvoid.builtin.which_key.mappings.g.s["2"] = "Stage Hunk"
nvoid.builtin.which_key.mappings.h["1"] = "<cmd>nohlsearch<CR>"
nvoid.builtin.which_key.mappings.h["2"] = " No Highlight"
nvoid.builtin.which_key.mappings.l.d["1"] = "<cmd>NvoidDiagnostics<cr>"
nvoid.builtin.which_key.mappings.l.d["2"] = "Diagnostics"
nvoid.builtin.which_key.mappings.l.f["1"] = "<cmd>lua require('nvoid.lsp.utils').format()<cr>"
nvoid.builtin.which_key.mappings.l.f["2"] = "Format"
nvoid.builtin.which_key.mappings.l.i["1"] = "<cmd>LspInfo<cr>"
nvoid.builtin.which_key.mappings.l.i["2"] = "Info"
nvoid.builtin.which_key.mappings.l.l["1"] = "<cmd>MasonLog<cr>"
nvoid.builtin.which_key.mappings.l.l["2"] = "Mason Log"
nvoid.builtin.which_key.mappings.l.m["1"] = "<cmd>Mason<cr>"
nvoid.builtin.which_key.mappings.l.m["2"] = "Mason"
nvoid.builtin.which_key.mappings.l.name = "  lsp"
nvoid.builtin.which_key.mappings.l.r["1"] = "<cmd>lua require('ysf.lsp.renamer').open()<cr>"
nvoid.builtin.which_key.mappings.l.r["2"] = "Rename"
nvoid.builtin.which_key.mappings.l.T["1"] = "<cmd>Telescope diagnostics<CR>"
nvoid.builtin.which_key.mappings.l.t["1"] = "<cmd>Trouble diagnostics toggle<cr>"
nvoid.builtin.which_key.mappings.l.T["2"] = "Telescope Diagnocstics"
nvoid.builtin.which_key.mappings.l.t["2"] = "Trouble Toggle"
nvoid.builtin.which_key.mappings.N["1"] = "<cmd>enew<cr>"
nvoid.builtin.which_key.mappings.N["2"] = " New File"
nvoid.builtin.which_key.mappings.n.e["1"] = "<cmd>edit/home/ysf/.config/nvoid/config.lua<CR>"
nvoid.builtin.which_key.mappings.n.e["2"] = "Edit Config"
nvoid.builtin.which_key.mappings.n.i["1"] = "<cmd>NvoidInfo<cr>"
nvoid.builtin.which_key.mappings.n.i["2"] = "Info"
nvoid.builtin.which_key.mappings.n.name = "  Nvoid"
nvoid.builtin.which_key.mappings.n.r["1"] = "<cmd>NvoidReload<CR>"
nvoid.builtin.which_key.mappings.n.r["2"] = "Reload"
nvoid.builtin.which_key.mappings.n.u["1"] = "<cmd>NvoidUpdate<CR>"
nvoid.builtin.which_key.mappings.n.u["2"] = "Update"
nvoid.builtin.which_key.mappings.p.c["1"] = "<cmd>Lazy clean<cr>"
nvoid.builtin.which_key.mappings.p.c["2"] = "Clean"
nvoid.builtin.which_key.mappings.p.d["1"] = "<cmd>Lazy debug<cr>"
nvoid.builtin.which_key.mappings.p.d["2"] = "Debug"
nvoid.builtin.which_key.mappings.p.i["1"] = "<cmd>Lazy install<cr>"
nvoid.builtin.which_key.mappings.p.i["2"] = "Install"
nvoid.builtin.which_key.mappings.p.l["1"] = "<cmd>Lazy log<cr>"
nvoid.builtin.which_key.mappings.p.l["2"] = "Log"
nvoid.builtin.which_key.mappings.p.name = "  Plugins"
nvoid.builtin.which_key.mappings.p.p["1"] = "<cmd>Lazy profile<cr>"
nvoid.builtin.which_key.mappings.p.p["2"] = "Profile"
nvoid.builtin.which_key.mappings.p.S["1"] = "<cmd>Lazy clear<cr>"
nvoid.builtin.which_key.mappings.p.s["1"] = "<cmd>Lazy sync<cr>"
nvoid.builtin.which_key.mappings.p.S["2"] = "Status"
nvoid.builtin.which_key.mappings.p.s["2"] = "Sync"
nvoid.builtin.which_key.mappings.p.u["1"] = "<cmd>Lazy update<cr>"
nvoid.builtin.which_key.mappings.p.u["2"] = "Update"
nvoid.builtin.which_key.mappings.s["1"] = "<cmd>lua require('telescope.builtin').find_files(require('telescope.themes').get_dropdown{previewer = false})<CR>"
nvoid.builtin.which_key.mappings.s["2"] = " Search"
nvoid.builtin.which_key.mappings.S.name = "  Spectre"
nvoid.builtin.which_key.mappings.S.o["1"] = "<cmd>lua require('spectre').open()<CR>"
nvoid.builtin.which_key.mappings.S.o["2"] = "Open"
nvoid.builtin.which_key.mappings.S.p["1"] = "<cmd>lua require('spectre').open_file_search({select_word=true})<CR>"
nvoid.builtin.which_key.mappings.S.p["2"] = "Search on current file"
nvoid.builtin.which_key.mappings.S.w["1"] = "<cmd>lua require('spectre').open_visual({select_word=true})<CR>"
nvoid.builtin.which_key.mappings.S.w["2"] = "Search current word"
nvoid.builtin.which_key.mappings.w["1"] = "<cmd>write<cr>"
nvoid.builtin.which_key.mappings.w["2"] = " Write"
nvoid.builtin.which_key.mappings.x["1"] = "<cmd>wqa!<cr>"
nvoid.builtin.which_key.mappings.x["2"] = " Write and Quit"
nvoid.builtin.which_key.mappings.z.name = " 🧘 Zen"
nvoid.builtin.which_key.mappings.z.t["1"] = "<cmd>Twilight<cr>"
nvoid.builtin.which_key.mappings.z.t["2"] = "Twilight"
nvoid.builtin.which_key.mappings.z.z["1"] = "<cmd>ZenMode<cr>"
nvoid.builtin.which_key.mappings.z.z["2"] = "ZenMode"
nvoid.builtin.which_key.opts.mode = "n"
nvoid.builtin.which_key.opts.noremap = true
nvoid.builtin.which_key.opts.nowait = true
nvoid.builtin.which_key.opts.prefix = "<leader>"
nvoid.builtin.which_key.opts.silent = true
nvoid.builtin.which_key.setup.disable.filetypes["1"] = "TelescopePrompt"
nvoid.builtin.which_key.setup.hidden["1"] = "<silent>"
nvoid.builtin.which_key.setup.hidden["2"] = "<cmd>"
nvoid.builtin.which_key.setup.hidden["3"] = "<Cmd>"
nvoid.builtin.which_key.setup.hidden["4"] = "<CR>"
nvoid.builtin.which_key.setup.hidden["5"] = "call"
nvoid.builtin.which_key.setup.hidden["6"] = "lua"
nvoid.builtin.which_key.setup.hidden["7"] = "^:"
nvoid.builtin.which_key.setup.hidden["8"] = "^ "
nvoid.builtin.which_key.setup.icons.breadcrumb = "»"
nvoid.builtin.which_key.setup.icons.group = ""
nvoid.builtin.which_key.setup.icons.separator = ""
nvoid.builtin.which_key.setup.ignore_missing = false
nvoid.builtin.which_key.setup.layout.align = "center"
nvoid.builtin.which_key.setup.layout.height.max = 25
nvoid.builtin.which_key.setup.layout.height.min = 4
nvoid.builtin.which_key.setup.layout.spacing = 3
nvoid.builtin.which_key.setup.layout.width.max = 50
nvoid.builtin.which_key.setup.layout.width.min = 20
nvoid.builtin.which_key.setup.plugins.marks = true
nvoid.builtin.which_key.setup.plugins.presets.g = true
nvoid.builtin.which_key.setup.plugins.presets.motions = false
nvoid.builtin.which_key.setup.plugins.presets.nav = true
nvoid.builtin.which_key.setup.plugins.presets.operators = false
nvoid.builtin.which_key.setup.plugins.presets.text_objects = false
nvoid.builtin.which_key.setup.plugins.presets.windows = false
nvoid.builtin.which_key.setup.plugins.presets.z = true
nvoid.builtin.which_key.setup.plugins.registers = true
nvoid.builtin.which_key.setup.plugins.spelling.enabled = true
nvoid.builtin.which_key.setup.plugins.spelling.suggestions = 20
nvoid.builtin.which_key.setup.popup_mappings.scroll_down = "<c-d>"
nvoid.builtin.which_key.setup.popup_mappings.scroll_up = "<c-u>"
nvoid.builtin.which_key.setup.show_help = true
nvoid.builtin.which_key.setup.show_keys = true
nvoid.builtin.which_key.setup.triggers = "auto"
nvoid.builtin.which_key.setup.triggers_blacklist.i["1"] = "j"
nvoid.builtin.which_key.setup.triggers_blacklist.i["2"] = "k"
nvoid.builtin.which_key.setup.triggers_blacklist.v["1"] = "j"
nvoid.builtin.which_key.setup.triggers_blacklist.v["2"] = "k"
nvoid.builtin.which_key.setup.window.border = "single"
nvoid.builtin.which_key.setup.window.margin["1"] = 1
nvoid.builtin.which_key.setup.window.margin["2"] = 0
nvoid.builtin.which_key.setup.window.margin["3"] = 1
nvoid.builtin.which_key.setup.window.margin["4"] = 0
nvoid.builtin.which_key.setup.window.padding["1"] = 2
nvoid.builtin.which_key.setup.window.padding["2"] = 2
nvoid.builtin.which_key.setup.window.padding["3"] = 2
nvoid.builtin.which_key.setup.window.padding["4"] = 2
nvoid.builtin.which_key.setup.window.position = "bottom"
nvoid.builtin.which_key.setup.window.winblend = 0
nvoid.builtin.which_key.vmappings["/"]["1"] = "<Plug>(comment_toggle_linewise_visual)"
nvoid.builtin.which_key.vmappings["/"]["2"] = "Comment toggle linewise (visual)"
nvoid.builtin.which_key.vmappings.l.a["1"] = "<cmd>lua vim.lsp.buf.code_action()<cr>"
nvoid.builtin.which_key.vmappings.l.a["2"] = "Code Action"
nvoid.builtin.which_key.vmappings.l.name = "LSP"
nvoid.builtin.which_key.vmappings.Sw["1"] = "<esc><cmd>lua require('spectre').open_visual()<CR>"
nvoid.builtin.which_key.vmappings.Sw["2"] = "Search current word"
nvoid.builtin.which_key.vopts.mode = "v"
nvoid.builtin.which_key.vopts.noremap = true
nvoid.builtin.which_key.vopts.nowait = true
nvoid.builtin.which_key.vopts.prefix = "<leader>"
nvoid.builtin.which_key.vopts.silent = true
nvoid.builtin.winbar.active = true
nvoid.builtin.winbar.options.depth_limit = 0
nvoid.builtin.winbar.options.depth_limit_indicator = ".."
nvoid.builtin.winbar.options.highlight = true
nvoid.builtin.winbar.options.icons.Array = " "
nvoid.builtin.winbar.options.icons.Boolean = " "
nvoid.builtin.winbar.options.icons.Class = "  "
nvoid.builtin.winbar.options.icons.Color = " "
nvoid.builtin.winbar.options.icons.Constant = " "
nvoid.builtin.winbar.options.icons.Constructor = " "
nvoid.builtin.winbar.options.icons.Enum = " "
nvoid.builtin.winbar.options.icons.EnumMember = " "
nvoid.builtin.winbar.options.icons.Event = " "
nvoid.builtin.winbar.options.icons.Field = " "
nvoid.builtin.winbar.options.icons.File = " "
nvoid.builtin.winbar.options.icons.Folder = "󰉋 "
nvoid.builtin.winbar.options.icons.Function = " "
nvoid.builtin.winbar.options.icons.Interface = " "
nvoid.builtin.winbar.options.icons.Key = " "
nvoid.builtin.winbar.options.icons.Keyword = " "
nvoid.builtin.winbar.options.icons.Method = " "
nvoid.builtin.winbar.options.icons.Module = " "
nvoid.builtin.winbar.options.icons.Namespace = " "
nvoid.builtin.winbar.options.icons.Null = "󰟢 "
nvoid.builtin.winbar.options.icons.Number = " "
nvoid.builtin.winbar.options.icons.Object = " "
nvoid.builtin.winbar.options.icons.Operator = " "
nvoid.builtin.winbar.options.icons.Package = " "
nvoid.builtin.winbar.options.icons.Property = " "
nvoid.builtin.winbar.options.icons.Reference = " "
nvoid.builtin.winbar.options.icons.Snippet = " "
nvoid.builtin.winbar.options.icons.String = " "
nvoid.builtin.winbar.options.icons.Struct = " "
nvoid.builtin.winbar.options.icons.Text = " "
nvoid.builtin.winbar.options.icons.TypeParameter = " "
nvoid.builtin.winbar.options.icons.Unit = " "
nvoid.builtin.winbar.options.icons.Value = " "
nvoid.builtin.winbar.options.icons.Variable = " "
nvoid.builtin.winbar.options.separator = " > "
nvoid.builtin.winbar.winbar_filetype_exclude["10"] = "lir"
nvoid.builtin.winbar.winbar_filetype_exclude["11"] = "Outline"
nvoid.builtin.winbar.winbar_filetype_exclude["12"] = "spectre_panel"
nvoid.builtin.winbar.winbar_filetype_exclude["13"] = "toggleterm"
nvoid.builtin.winbar.winbar_filetype_exclude["14"] = "DressingSelect"
nvoid.builtin.winbar.winbar_filetype_exclude["15"] = "Jaq"
nvoid.builtin.winbar.winbar_filetype_exclude["16"] = "harpoon"
nvoid.builtin.winbar.winbar_filetype_exclude["17"] = "dap-repl"
nvoid.builtin.winbar.winbar_filetype_exclude["18"] = "dap-terminal"
nvoid.builtin.winbar.winbar_filetype_exclude["19"] = "dapui_console"
nvoid.builtin.winbar.winbar_filetype_exclude["1"] = "help"
nvoid.builtin.winbar.winbar_filetype_exclude["20"] = "dapui_hover"
nvoid.builtin.winbar.winbar_filetype_exclude["21"] = "lab"
nvoid.builtin.winbar.winbar_filetype_exclude["22"] = "notify"
nvoid.builtin.winbar.winbar_filetype_exclude["23"] = "noice"
nvoid.builtin.winbar.winbar_filetype_exclude["24"] = "neotest-summary"
nvoid.builtin.winbar.winbar_filetype_exclude["25"] = ""
nvoid.builtin.winbar.winbar_filetype_exclude["2"] = "startify"
nvoid.builtin.winbar.winbar_filetype_exclude["3"] = "dashboard"
nvoid.builtin.winbar.winbar_filetype_exclude["4"] = "lazy"
nvoid.builtin.winbar.winbar_filetype_exclude["5"] = "neo-tree"
nvoid.builtin.winbar.winbar_filetype_exclude["6"] = "neogitstatus"
nvoid.builtin.winbar.winbar_filetype_exclude["7"] = "NvimTree"
nvoid.builtin.winbar.winbar_filetype_exclude["8"] = "Trouble"
nvoid.builtin.winbar.winbar_filetype_exclude["9"] = "alpha"
nvoid.format_on_save = true
nvoid.icons.diagnostics.BoldError = ""
nvoid.icons.diagnostics.BoldHint = ""
nvoid.icons.diagnostics.BoldInformation = ""
nvoid.icons.diagnostics.BoldQuestion = ""
nvoid.icons.diagnostics.BoldWarning = ""
nvoid.icons.diagnostics.Debug = ""
nvoid.icons.diagnostics.Error = ""
nvoid.icons.diagnostics.Hint = "󰌶"
nvoid.icons.diagnostics.Information = ""
nvoid.icons.diagnostics.Question = ""
nvoid.icons.diagnostics.Trace = "✎"
nvoid.icons.diagnostics.Warning = ""
nvoid.icons.git.Branch = ""
nvoid.icons.git.Diff = ""
nvoid.icons.git.FileDeleted = ""
nvoid.icons.git.FileIgnored = "◌"
nvoid.icons.git.FileRenamed = ""
nvoid.icons.git.FileStaged = "S"
nvoid.icons.git.FileUnmerged = ""
nvoid.icons.git.FileUnstaged = ""
nvoid.icons.git.FileUntracked = "U"
nvoid.icons.git.LineAdded = ""
nvoid.icons.git.LineModified = ""
nvoid.icons.git.LineRemoved = ""
nvoid.icons.git.Octoface = ""
nvoid.icons.git.Repo = ""
nvoid.icons.kind.Array = ""
nvoid.icons.kind.Boolean = ""
nvoid.icons.kind.Class = " "
nvoid.icons.kind.Color = ""
nvoid.icons.kind.Constant = ""
nvoid.icons.kind.Constructor = ""
nvoid.icons.kind.Enum = ""
nvoid.icons.kind.EnumMember = ""
nvoid.icons.kind.Event = ""
nvoid.icons.kind.Field = ""
nvoid.icons.kind.File = ""
nvoid.icons.kind.Folder = "󰉋"
nvoid.icons.kind.Function = ""
nvoid.icons.kind.Interface = ""
nvoid.icons.kind.Key = ""
nvoid.icons.kind.Keyword = ""
nvoid.icons.kind.Method = ""
nvoid.icons.kind.Module = ""
nvoid.icons.kind.Namespace = ""
nvoid.icons.kind.Null = "󰟢"
nvoid.icons.kind.Number = ""
nvoid.icons.kind.Object = ""
nvoid.icons.kind.Operator = ""
nvoid.icons.kind.Package = ""
nvoid.icons.kind.Property = ""
nvoid.icons.kind.Reference = ""
nvoid.icons.kind.Snippet = ""
nvoid.icons.kind.String = ""
nvoid.icons.kind.Struct = ""
nvoid.icons.kind.Text = ""
nvoid.icons.kind.TypeParameter = ""
nvoid.icons.kind.Unit = ""
nvoid.icons.kind.Value = ""
nvoid.icons.kind.Variable = ""
nvoid.icons.misc.CircuitBoard = ""
nvoid.icons.misc.Package = ""
nvoid.icons.misc.Robot = "ﮧ"
nvoid.icons.misc.Smiley = "ﲃ"
nvoid.icons.misc.Squirrel = ""
nvoid.icons.misc.Tag = ""
nvoid.icons.misc.Watch = ""
nvoid.icons.Scroll["1"] = "__"
nvoid.icons.Scroll["2"] = "▁▁"
nvoid.icons.Scroll["3"] = "▂▂"
nvoid.icons.Scroll["4"] = "▃▃"
nvoid.icons.Scroll["5"] = "▄▄"
nvoid.icons.Scroll["6"] = "▅▅"
nvoid.icons.Scroll["7"] = "▆▆"
nvoid.icons.Scroll["8"] = "▇▇"
nvoid.icons.Scroll["9"] = "██"
nvoid.icons.ui.Add = ""
nvoid.icons.ui.ArrowCircleDown = ""
nvoid.icons.ui.ArrowCircleLeft = ""
nvoid.icons.ui.ArrowCircleRight = ""
nvoid.icons.ui.ArrowCircleUp = ""
nvoid.icons.ui.BoldArrowDown = ""
nvoid.icons.ui.BoldArrowLeft = ""
nvoid.icons.ui.BoldArrowRight = ""
nvoid.icons.ui.BoldArrowUp = ""
nvoid.icons.ui.BoldClose = ""
nvoid.icons.ui.BoldDividerLeft = ""
nvoid.icons.ui.BoldDividerRight = ""
nvoid.icons.ui.BoldLineLeft = "▎"
nvoid.icons.ui.BookMark = ""
nvoid.icons.ui.BoxChecked = ""
nvoid.icons.ui.Bug = ""
nvoid.icons.ui.Calendar = ""
nvoid.icons.ui.Check = ""
nvoid.icons.ui.ChevronRight = ">"
nvoid.icons.ui.ChevronShortDown = ""
nvoid.icons.ui.ChevronShortLeft = ""
nvoid.icons.ui.ChevronShortRight = ""
nvoid.icons.ui.ChevronShortUp = ""
nvoid.icons.ui.Circle = ""
nvoid.icons.ui.Close = "󰅖"
nvoid.icons.ui.CloudDownload = ""
nvoid.icons.ui.Code = ""
nvoid.icons.ui.Comment = ""
nvoid.icons.ui.Dashboard = ""
nvoid.icons.ui.DebugConsole = ""
nvoid.icons.ui.DividerLeft = ""
nvoid.icons.ui.DividerRight = ""
nvoid.icons.ui.DoubleChevronRight = "»"
nvoid.icons.ui.Ellipsis = ""
nvoid.icons.ui.EmptyFolder = ""
nvoid.icons.ui.EmptyFolderOpen = ""
nvoid.icons.ui.Explorer = ""
nvoid.icons.ui.File = ""
nvoid.icons.ui.Files = ""
nvoid.icons.ui.FileSymlink = ""
nvoid.icons.ui.FindFile = "󰈞"
nvoid.icons.ui.FindText = "󰊄"
nvoid.icons.ui.Fire = ""
nvoid.icons.ui.Folder = "󰉋"
nvoid.icons.ui.FolderOpen = ""
nvoid.icons.ui.FolderSymlink = ""
nvoid.icons.ui.Forward = ""
nvoid.icons.ui.Gear = ""
nvoid.icons.ui.History = ""
nvoid.icons.ui.Lightbulb = ""
nvoid.icons.ui.LineLeft = "▏"
nvoid.icons.ui.LineMiddle = "│"
nvoid.icons.ui.List = ""
nvoid.icons.ui.Lock = ""
nvoid.icons.ui.Lsp = ""
nvoid.icons.ui.NewFile = ""
nvoid.icons.ui.Note = ""
nvoid.icons.ui.Nvoid = ""
nvoid.icons.ui.Octoface = ""
nvoid.icons.ui.Package = ""
nvoid.icons.ui.Pencil = "󰏫"
nvoid.icons.ui.Plus = ""
nvoid.icons.ui.Project = ""
nvoid.icons.ui.Scopes = ""
nvoid.icons.ui.Search = ""
nvoid.icons.ui.SignIn = ""
nvoid.icons.ui.SignOut = ""
nvoid.icons.ui.spinnerActive = ""
nvoid.icons.ui.spinnerInactive = ""
nvoid.icons.ui.Stacks = ""
nvoid.icons.ui.Tab = "󰌒"
nvoid.icons.ui.Table = ""
nvoid.icons.ui.Target = "󰀘"
nvoid.icons.ui.Telescope = ""
nvoid.icons.ui.Text = ""
nvoid.icons.ui.Tree = ""
nvoid.icons.ui.Triangle = "󰐊"
nvoid.icons.ui.TriangleShortArrowDown = ""
nvoid.icons.ui.TriangleShortArrowLeft = ""
nvoid.icons.ui.TriangleShortArrowRight = ""
nvoid.icons.ui.TriangleShortArrowUp = ""
nvoid.icons.ui.Watches = "󰂥"
nvoid.keys.normal_mode["<C-a>"] = "gg<S-v>G"
nvoid.keys.normal_mode["<C-b>"] = ":JABSOpen<CR>"
nvoid.keys.normal_mode["<S-TAB>"] = ":BufferPrev<CR>"
nvoid.keys.normal_mode["<S-x>"] = ":BufferKill<CR>"
nvoid.keys.normal_mode["<TAB>"] = ":BufferNext<CR>"
nvoid.lazy.opts.defaults.lazy = false
nvoid.lazy.opts.git.timeout = 120
nvoid.lazy.opts.install.missing = true
nvoid.lazy.opts.lockfile = "/home/ysf/.config/nvoid/lazy-lock.json"
nvoid.lazy.opts.performance.rtp.disabled_plugins["10"] = "netrwFileHandlers"
nvoid.lazy.opts.performance.rtp.disabled_plugins["11"] = "matchit"
nvoid.lazy.opts.performance.rtp.disabled_plugins["1"] = "2html_plugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["12"] = "tar"
nvoid.lazy.opts.performance.rtp.disabled_plugins["13"] = "tarPlugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["14"] = "rrhelper"
nvoid.lazy.opts.performance.rtp.disabled_plugins["15"] = "spellfile_plugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["16"] = "vimball"
nvoid.lazy.opts.performance.rtp.disabled_plugins["17"] = "vimballPlugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["18"] = "zip"
nvoid.lazy.opts.performance.rtp.disabled_plugins["19"] = "zipPlugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["20"] = "tutor"
nvoid.lazy.opts.performance.rtp.disabled_plugins["21"] = "rplugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["22"] = "syntax"
nvoid.lazy.opts.performance.rtp.disabled_plugins["23"] = "synmenu"
nvoid.lazy.opts.performance.rtp.disabled_plugins["24"] = "optwin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["25"] = "compiler"
nvoid.lazy.opts.performance.rtp.disabled_plugins["26"] = "bugreport"
nvoid.lazy.opts.performance.rtp.disabled_plugins["27"] = "ftplugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["28"] = "editorconfig"
nvoid.lazy.opts.performance.rtp.disabled_plugins["2"] = "tohtml"
nvoid.lazy.opts.performance.rtp.disabled_plugins["3"] = "getscript"
nvoid.lazy.opts.performance.rtp.disabled_plugins["4"] = "getscriptPlugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["5"] = "gzip"
nvoid.lazy.opts.performance.rtp.disabled_plugins["6"] = "logipat"
nvoid.lazy.opts.performance.rtp.disabled_plugins["7"] = "netrw"
nvoid.lazy.opts.performance.rtp.disabled_plugins["8"] = "netrwPlugin"
nvoid.lazy.opts.performance.rtp.disabled_plugins["9"] = "netrwSettings"
nvoid.lazy.opts.performance.rtp.reset = false
nvoid.lazy.opts.readme.root = "/home/ysf/.local/share/nvoid/lazy/readme"
nvoid.lazy.opts.root = "/home/ysf/.local/share/nvoid/site/pack/lazy/opt"
nvoid.lazy.opts.spec["1"]["10"]["1"] = "nvim-telescope/telescope.nvim"
nvoid.lazy.opts.spec["1"]["10"].branch = "0.1.x"
nvoid.lazy.opts.spec["1"]["10"].cmd = "Telescope"
nvoid.lazy.opts.spec["1"]["10"].commit = "6312868"
-- nvoid.lazy.opts.spec["1"]["10"].config = function ()
nvoid.lazy.opts.spec["1"]["10"].enabled = true
nvoid.lazy.opts.spec["1"]["10"].lazy = true
nvoid.lazy.opts.spec["1"]["11"]["1"] = "hrsh7th/nvim-cmp"
nvoid.lazy.opts.spec["1"]["11"].commit = "cd2cf0c"
-- nvoid.lazy.opts.spec["1"]["11"].config = function ()
nvoid.lazy.opts.spec["1"]["11"].dependencies["1"] = "cmp-nvim-lsp"
nvoid.lazy.opts.spec["1"]["11"].dependencies["2"] = "cmp_luasnip"
nvoid.lazy.opts.spec["1"]["11"].dependencies["3"] = "cmp-buffer"
nvoid.lazy.opts.spec["1"]["11"].dependencies["4"] = "cmp-path"
nvoid.lazy.opts.spec["1"]["11"].dependencies["5"] = "cmp-cmdline"
nvoid.lazy.opts.spec["1"]["11"].event["1"] = "InsertEnter"
nvoid.lazy.opts.spec["1"]["11"].event["2"] = "CmdlineEnter"
nvoid.lazy.opts.spec["1"]["1"]["1"] = "neovim/nvim-lspconfig"
nvoid.lazy.opts.spec["1"]["12"]["1"] = "hrsh7th/cmp-nvim-lsp"
nvoid.lazy.opts.spec["1"]["12"].commit = "5af77f5"
nvoid.lazy.opts.spec["1"]["12"].lazy = true
nvoid.lazy.opts.spec["1"]["13"]["1"] = "saadparwaiz1/cmp_luasnip"
nvoid.lazy.opts.spec["1"]["13"].commit = "05a9ab2"
nvoid.lazy.opts.spec["1"]["13"].lazy = true
nvoid.lazy.opts.spec["1"]["14"]["1"] = "hrsh7th/cmp-buffer"
nvoid.lazy.opts.spec["1"]["14"].commit = "3022dbc"
nvoid.lazy.opts.spec["1"]["14"].lazy = true
nvoid.lazy.opts.spec["1"]["15"]["1"] = "hrsh7th/cmp-path"
nvoid.lazy.opts.spec["1"]["15"].commit = "91ff86c"
nvoid.lazy.opts.spec["1"]["15"].lazy = true
nvoid.lazy.opts.spec["1"]["16"]["1"] = "hrsh7th/cmp-cmdline"
nvoid.lazy.opts.spec["1"]["16"].commit = "d250c63"
nvoid.lazy.opts.spec["1"]["16"].enabled = true
nvoid.lazy.opts.spec["1"]["16"].lazy = true
nvoid.lazy.opts.spec["1"]["17"]["1"] = "L3MON4D3/LuaSnip"
nvoid.lazy.opts.spec["1"]["17"].commit = "1def353"
-- nvoid.lazy.opts.spec["1"]["17"].config = function ()
nvoid.lazy.opts.spec["1"]["17"].dependencies["1"] = "friendly-snippets"
nvoid.lazy.opts.spec["1"]["17"].event = "InsertEnter"
nvoid.lazy.opts.spec["1"]["18"]["1"] = "rafamadriz/friendly-snippets"
nvoid.lazy.opts.spec["1"]["18"].commit = "3e9a3f5"
nvoid.lazy.opts.spec["1"]["18"].cond = true
nvoid.lazy.opts.spec["1"]["18"].lazy = true
nvoid.lazy.opts.spec["1"]["19"]["1"] = "folke/neodev.nvim"
nvoid.lazy.opts.spec["1"]["19"].lazy = true
nvoid.lazy.opts.spec["1"]["1"].commit = "aa5f4f4"
nvoid.lazy.opts.spec["1"]["1"].dependencies["1"] = "mason-lspconfig.nvim"
nvoid.lazy.opts.spec["1"]["1"].dependencies["2"] = "nlsp-settings.nvim"
nvoid.lazy.opts.spec["1"]["1"].lazy = true
nvoid.lazy.opts.spec["1"]["20"]["1"] = "windwp/nvim-autopairs"
nvoid.lazy.opts.spec["1"]["20"].commit = "14e9737"
-- nvoid.lazy.opts.spec["1"]["20"].config = function ()
nvoid.lazy.opts.spec["1"]["20"].dependencies["1"] = "nvim-treesitter/nvim-treesitter"
nvoid.lazy.opts.spec["1"]["20"].dependencies["2"] = "hrsh7th/nvim-cmp"
nvoid.lazy.opts.spec["1"]["20"].enabled = true
nvoid.lazy.opts.spec["1"]["20"].event = "InsertEnter"
nvoid.lazy.opts.spec["1"]["21"]["1"] = "nvim-treesitter/nvim-treesitter"
nvoid.lazy.opts.spec["1"]["21"].build = ":TSUpdate"
nvoid.lazy.opts.spec["1"]["21"].cmd["1"] = "TSInstall"
nvoid.lazy.opts.spec["1"]["21"].cmd["2"] = "TSBufEnable"
nvoid.lazy.opts.spec["1"]["21"].cmd["3"] = "TSBufDisable"
nvoid.lazy.opts.spec["1"]["21"].cmd["4"] = "TSModuleInfo"
nvoid.lazy.opts.spec["1"]["21"].commit = "d5a1c2b"
-- nvoid.lazy.opts.spec["1"]["21"].config = function ()
-- nvoid.lazy.opts.spec["1"]["21"].init = function ()
nvoid.lazy.opts.spec["1"]["2"]["1"] = "nvoid-lua/base16"
nvoid.lazy.opts.spec["1"]["22"]["1"] = "JoosepAlviste/nvim-ts-context-commentstring"
nvoid.lazy.opts.spec["1"]["22"].lazy = true
nvoid.lazy.opts.spec["1"]["23"]["1"] = "kyazdani42/nvim-tree.lua"
nvoid.lazy.opts.spec["1"]["23"].cmd["1"] = "NvimTreeToggle"
nvoid.lazy.opts.spec["1"]["23"].cmd["2"] = "NvimTreeOpen"
nvoid.lazy.opts.spec["1"]["23"].cmd["3"] = "NvimTreeFocus"
nvoid.lazy.opts.spec["1"]["23"].cmd["4"] = "NvimTreeFindFileToggle"
nvoid.lazy.opts.spec["1"]["23"].commit = "64f61e4"
-- nvoid.lazy.opts.spec["1"]["23"].config = function ()
nvoid.lazy.opts.spec["1"]["23"].enabled = true
nvoid.lazy.opts.spec["1"]["23"].event = "User DirOpened"
nvoid.lazy.opts.spec["1"]["24"]["1"] = "lewis6991/gitsigns.nvim"
nvoid.lazy.opts.spec["1"]["24"].commit = "805610a"
-- nvoid.lazy.opts.spec["1"]["24"].config = function ()
nvoid.lazy.opts.spec["1"]["24"].enabled = true
nvoid.lazy.opts.spec["1"]["24"].ft["1"] = "gitcommit"
nvoid.lazy.opts.spec["1"]["24"].ft["2"] = "diff"
-- nvoid.lazy.opts.spec["1"]["24"].init = function ()
nvoid.lazy.opts.spec["1"]["25"]["1"] = "akinsho/toggleterm.nvim"
nvoid.lazy.opts.spec["1"]["25"].cmd["1"] = "ToggleTerm"
nvoid.lazy.opts.spec["1"]["25"].cmd["2"] = "TermExec"
nvoid.lazy.opts.spec["1"]["25"].cmd["3"] = "ToggleTermToggleAll"
nvoid.lazy.opts.spec["1"]["25"].cmd["4"] = "ToggleTermSendCurrentLine"
nvoid.lazy.opts.spec["1"]["25"].cmd["5"] = "ToggleTermSendVisualLines"
nvoid.lazy.opts.spec["1"]["25"].cmd["6"] = "ToggleTermSendVisualSelection"
nvoid.lazy.opts.spec["1"]["25"].commit = "066cccf"
-- nvoid.lazy.opts.spec["1"]["25"].config = function ()
nvoid.lazy.opts.spec["1"]["25"].enabled = true
-- nvoid.lazy.opts.spec["1"]["25"].init = function ()
nvoid.lazy.opts.spec["1"]["25"].keys = "<c-t>"
nvoid.lazy.opts.spec["1"]["25"].version = "*"
nvoid.lazy.opts.spec["1"]["26"]["1"] = "numToStr/Comment.nvim"
nvoid.lazy.opts.spec["1"]["26"].commit = "0236521"
-- nvoid.lazy.opts.spec["1"]["26"].config = function ()
nvoid.lazy.opts.spec["1"]["26"].enabled = true
nvoid.lazy.opts.spec["1"]["26"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["26"].keys["1"]["1"] = "gc"
nvoid.lazy.opts.spec["1"]["26"].keys["1"].mode["1"] = "n"
nvoid.lazy.opts.spec["1"]["26"].keys["1"].mode["2"] = "v"
nvoid.lazy.opts.spec["1"]["26"].keys["2"]["1"] = "gb"
nvoid.lazy.opts.spec["1"]["26"].keys["2"].mode["1"] = "n"
nvoid.lazy.opts.spec["1"]["26"].keys["2"].mode["2"] = "v"
nvoid.lazy.opts.spec["1"]["27"]["1"] = "nvim-tree/nvim-web-devicons"
nvoid.lazy.opts.spec["1"]["27"].commit = "5b90678"
nvoid.lazy.opts.spec["1"]["27"].enabled = true
nvoid.lazy.opts.spec["1"]["27"].lazy = true
nvoid.lazy.opts.spec["1"]["28"]["1"] = "mfussenegger/nvim-dap"
nvoid.lazy.opts.spec["1"]["28"].commit = "13ce59d"
-- nvoid.lazy.opts.spec["1"]["28"].config = function ()
nvoid.lazy.opts.spec["1"]["28"].dependencies["1"] = "rcarriga/nvim-dap-ui"
nvoid.lazy.opts.spec["1"]["28"].enabled = true
nvoid.lazy.opts.spec["1"]["28"].lazy = true
nvoid.lazy.opts.spec["1"]["29"]["1"] = "rcarriga/nvim-dap-ui"
nvoid.lazy.opts.spec["1"]["29"].commit = "34160a7"
-- nvoid.lazy.opts.spec["1"]["29"].config = function ()
nvoid.lazy.opts.spec["1"]["29"].enabled = true
nvoid.lazy.opts.spec["1"]["29"].lazy = true
-- nvoid.lazy.opts.spec["1"]["2"].build = function ()
nvoid.lazy.opts.spec["1"]["30"]["1"] = "goolord/alpha-nvim"
nvoid.lazy.opts.spec["1"]["30"].commit = "29074ee"
-- nvoid.lazy.opts.spec["1"]["30"].config = function ()
nvoid.lazy.opts.spec["1"]["30"].enabled = false
nvoid.lazy.opts.spec["1"]["30"].event = "VimEnter"
nvoid.lazy.opts.spec["1"]["31"]["1"] = "RRethy/vim-illuminate"
nvoid.lazy.opts.spec["1"]["31"].commit = "e522e0d"
-- nvoid.lazy.opts.spec["1"]["31"].config = function ()
nvoid.lazy.opts.spec["1"]["31"].enabled = true
nvoid.lazy.opts.spec["1"]["31"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["3"]["1"] = "nvoid-lua/bufferline.lua"
nvoid.lazy.opts.spec["1"]["32"]["1"] = "lukas-reineke/indent-blankline.nvim"
nvoid.lazy.opts.spec["1"]["32"].commit = "9637670"
-- nvoid.lazy.opts.spec["1"]["32"].config = function ()
nvoid.lazy.opts.spec["1"]["32"].enabled = true
nvoid.lazy.opts.spec["1"]["32"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["33"]["1"] = "folke/which-key.nvim"
nvoid.lazy.opts.spec["1"]["33"].commit = "4433e5e"
-- nvoid.lazy.opts.spec["1"]["33"].config = function ()
nvoid.lazy.opts.spec["1"]["33"].enabled = true
nvoid.lazy.opts.spec["1"]["33"].keys["1"] = "<leader>"
nvoid.lazy.opts.spec["1"]["33"].keys["2"] = "\""
nvoid.lazy.opts.spec["1"]["33"].keys["3"] = "'"
nvoid.lazy.opts.spec["1"]["33"].keys["4"] = "`"
nvoid.lazy.opts.spec["1"]["33"].keys["5"] = "c"
nvoid.lazy.opts.spec["1"]["33"].keys["6"] = "v"
nvoid.lazy.opts.spec["1"]["33"].keys["7"] = "g"
-- nvoid.lazy.opts.spec["1"]["3"].config = function ()
nvoid.lazy.opts.spec["1"]["3"].dependencies = "nvim-tree/nvim-web-devicons"
nvoid.lazy.opts.spec["1"]["3"].enabled = true
nvoid.lazy.opts.spec["1"]["4"]["1"] = "SmiteshP/nvim-navic"
-- nvoid.lazy.opts.spec["1"]["4"].config = function ()
nvoid.lazy.opts.spec["1"]["4"].enabled = true
nvoid.lazy.opts.spec["1"]["4"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["5"]["1"] = "williamboman/mason-lspconfig.nvim"
nvoid.lazy.opts.spec["1"]["5"].cmd["1"] = "LspInstall"
nvoid.lazy.opts.spec["1"]["5"].cmd["2"] = "LspUninstall"
nvoid.lazy.opts.spec["1"]["5"].commit = "273fdde"
-- nvoid.lazy.opts.spec["1"]["5"].config = function ()
nvoid.lazy.opts.spec["1"]["5"].dependencies = "mason.nvim"
nvoid.lazy.opts.spec["1"]["5"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["5"].lazy = true
nvoid.lazy.opts.spec["1"]["6"]["1"] = "tamago324/nlsp-settings.nvim"
nvoid.lazy.opts.spec["1"]["6"].cmd = "LspSettings"
nvoid.lazy.opts.spec["1"]["6"].lazy = true
nvoid.lazy.opts.spec["1"]["7"]["1"] = "nvimtools/none-ls.nvim"
nvoid.lazy.opts.spec["1"]["7"].commit = "3a48266"
nvoid.lazy.opts.spec["1"]["7"].lazy = true
nvoid.lazy.opts.spec["1"]["8"]["1"] = "williamboman/mason.nvim"
-- nvoid.lazy.opts.spec["1"]["8"].build = function ()
nvoid.lazy.opts.spec["1"]["8"].cmd["1"] = "Mason"
nvoid.lazy.opts.spec["1"]["8"].cmd["2"] = "MasonInstall"
nvoid.lazy.opts.spec["1"]["8"].cmd["3"] = "MasonUninstall"
nvoid.lazy.opts.spec["1"]["8"].cmd["4"] = "MasonUninstallAll"
nvoid.lazy.opts.spec["1"]["8"].cmd["5"] = "MasonLog"
nvoid.lazy.opts.spec["1"]["8"].commit = "751b1fc"
-- nvoid.lazy.opts.spec["1"]["8"].config = function ()
nvoid.lazy.opts.spec["1"]["8"].event = "User FileOpened"
nvoid.lazy.opts.spec["1"]["8"].lazy = true
nvoid.lazy.opts.spec["1"]["9"]["1"] = "nvim-lua/plenary.nvim"
nvoid.lazy.opts.spec["1"]["9"].cmd["1"] = "PlenaryBustedFile"
nvoid.lazy.opts.spec["1"]["9"].cmd["2"] = "PlenaryBustedDirectory"
nvoid.lazy.opts.spec["1"]["9"].commit = "08e3019"
nvoid.lazy.opts.spec["1"]["9"].lazy = true
nvoid.lazy.opts.spec["2"]["10"]["1"] = "kylechui/nvim-surround"
-- nvoid.lazy.opts.spec["2"]["10"].config = function ()
nvoid.lazy.opts.spec["2"]["11"]["1"] = "folke/todo-comments.nvim"
-- nvoid.lazy.opts.spec["2"]["11"].config = function ()
nvoid.lazy.opts.spec["2"]["11"].dependencies = "nvim-lua/plenary.nvim"
nvoid.lazy.opts.spec["2"]["1"]["1"] = "tamago324/lir.nvim"
nvoid.lazy.opts.spec["2"]["12"]["1"] = "folke/zen-mode.nvim"
-- nvoid.lazy.opts.spec["2"]["12"].config = function ()
nvoid.lazy.opts.spec["2"]["13"]["1"] = "folke/twilight.nvim"
-- nvoid.lazy.opts.spec["2"]["13"].config = function ()
nvoid.lazy.opts.spec["2"]["14"]["1"] = "lvimuser/lsp-inlayhints.nvim"
nvoid.lazy.opts.spec["2"]["14"].branch = "anticonceal"
-- nvoid.lazy.opts.spec["2"]["14"].config = function ()
nvoid.lazy.opts.spec["2"]["15"]["1"] = "opalmay/vim-smoothie"
-- nvoid.lazy.opts.spec["2"]["15"].config = function ()
nvoid.lazy.opts.spec["2"]["16"]["1"] = "nvim-pack/nvim-spectre"
-- nvoid.lazy.opts.spec["2"]["16"].config = function ()
nvoid.lazy.opts.spec["2"]["17"]["1"] = "ellisonleao/glow.nvim"
nvoid.lazy.opts.spec["2"]["17"].cmd = "Glow"
nvoid.lazy.opts.spec["2"]["17"].config = true
nvoid.lazy.opts.spec["2"]["18"]["1"] = "j-hui/fidget.nvim"
nvoid.lazy.opts.spec["2"]["18"].branch = "legacy"
-- nvoid.lazy.opts.spec["2"]["18"].config = function ()
nvoid.lazy.opts.spec["2"]["19"]["1"] = "ahmedkhalf/project.nvim"
-- nvoid.lazy.opts.spec["2"]["19"].config = function ()
-- nvoid.lazy.opts.spec["2"]["1"].config = function ()
nvoid.lazy.opts.spec["2"]["1"].event = "User DirOpened"
nvoid.lazy.opts.spec["2"]["20"]["1"] = "nvim-telescope/telescope-file-browser.nvim"
nvoid.lazy.opts.spec["2"]["20"].dependencies["1"] = "nvim-telescope/telescope.nvim"
nvoid.lazy.opts.spec["2"]["20"].dependencies["2"] = "nvim-lua/plenary.nvim"
nvoid.lazy.opts.spec["2"]["2"]["1"] = "NvChad/nvim-colorizer.lua"
-- nvoid.lazy.opts.spec["2"]["2"].config = function ()
nvoid.lazy.opts.spec["2"]["3"]["1"] = "nvim-treesitter/playground"
-- nvoid.lazy.opts.spec["2"]["3"].config = function ()
nvoid.lazy.opts.spec["2"]["4"]["1"] = "ChristianChiarulli/nvim-ts-rainbow"
nvoid.lazy.opts.spec["2"]["5"]["1"] = "nvim-treesitter/nvim-treesitter-textobjects"
nvoid.lazy.opts.spec["2"]["6"]["1"] = "simrat39/symbols-outline.nvim"
-- nvoid.lazy.opts.spec["2"]["6"].config = function ()
nvoid.lazy.opts.spec["2"]["7"]["1"] = "folke/trouble.nvim"
nvoid.lazy.opts.spec["2"]["7"].cmd = "Trouble"
-- nvoid.lazy.opts.spec["2"]["7"].config = function ()
nvoid.lazy.opts.spec["2"]["8"]["1"] = "jay-babu/mason-null-ls.nvim"
-- nvoid.lazy.opts.spec["2"]["8"].config = function ()
nvoid.lazy.opts.spec["2"]["8"].dependencies["1"] = "williamboman/mason.nvim"
nvoid.lazy.opts.spec["2"]["8"].dependencies["2"] = "nvimtools/none-ls.nvim"
nvoid.lazy.opts.spec["2"]["8"].event["1"] = "BufReadPre"
nvoid.lazy.opts.spec["2"]["8"].event["2"] = "BufNewFile"
nvoid.lazy.opts.spec["2"]["9"]["1"] = "jay-babu/mason-nvim-dap.nvim"
nvoid.lazy.opts.spec["2"]["9"].cmd["1"] = "DapInstall"
nvoid.lazy.opts.spec["2"]["9"].cmd["2"] = "DapUninstall"
-- nvoid.lazy.opts.spec["2"]["9"].config = function ()
nvoid.lazy.opts.ui.border = "single"
nvoid.leader = "space"
nvoid.log.level = "warn"
nvoid.log.override_notify = false
nvoid.log.viewer.cmd = "lnav"
nvoid.log.viewer.layout_config.direction = "horizontal"
nvoid.log.viewer.layout_config.open_mapping = ""
nvoid.log.viewer.layout_config.size = 40
nvoid.lsp.automatic_configuration.skipped_filetypes["1"] = "markdown"
nvoid.lsp.automatic_configuration.skipped_filetypes["2"] = "rst"
nvoid.lsp.automatic_configuration.skipped_filetypes["3"] = "plaintext"
nvoid.lsp.automatic_configuration.skipped_filetypes["4"] = "toml"
nvoid.lsp.automatic_configuration.skipped_filetypes["5"] = "proto"
nvoid.lsp.automatic_configuration.skipped_servers["10"] = "custom_elements_ls"
nvoid.lsp.automatic_configuration.skipped_servers["11"] = "denols"
nvoid.lsp.automatic_configuration.skipped_servers["12"] = "docker_compose_language_service"
nvoid.lsp.automatic_configuration.skipped_servers["13"] = "dprint"
nvoid.lsp.automatic_configuration.skipped_servers["14"] = "elp"
nvoid.lsp.automatic_configuration.skipped_servers["15"] = "ember"
nvoid.lsp.automatic_configuration.skipped_servers["16"] = "emmet_language_server"
nvoid.lsp.automatic_configuration.skipped_servers["17"] = "emmet_ls"
nvoid.lsp.automatic_configuration.skipped_servers["18"] = "eslint"
nvoid.lsp.automatic_configuration.skipped_servers["19"] = "eslintls"
nvoid.lsp.automatic_configuration.skipped_servers["1"] = "angularls"
nvoid.lsp.automatic_configuration.skipped_servers["20"] = "fennel_language_server"
nvoid.lsp.automatic_configuration.skipped_servers["21"] = "gitlab_ci_ls"
nvoid.lsp.automatic_configuration.skipped_servers["22"] = "glint"
nvoid.lsp.automatic_configuration.skipped_servers["23"] = "glslls"
nvoid.lsp.automatic_configuration.skipped_servers["24"] = "golangci_lint_ls"
nvoid.lsp.automatic_configuration.skipped_servers["25"] = "gradle_ls"
nvoid.lsp.automatic_configuration.skipped_servers["26"] = "graphql"
nvoid.lsp.automatic_configuration.skipped_servers["27"] = "hdl_checker"
nvoid.lsp.automatic_configuration.skipped_servers["28"] = "hydra_lsp"
nvoid.lsp.automatic_configuration.skipped_servers["29"] = "htmx"
nvoid.lsp.automatic_configuration.skipped_servers["2"] = "ansiblels"
nvoid.lsp.automatic_configuration.skipped_servers["30"] = "java_language_server"
nvoid.lsp.automatic_configuration.skipped_servers["31"] = "jedi_language_server"
nvoid.lsp.automatic_configuration.skipped_servers["32"] = "lexical"
nvoid.lsp.automatic_configuration.skipped_servers["33"] = "ltex"
nvoid.lsp.automatic_configuration.skipped_servers["34"] = "lwc_ls"
nvoid.lsp.automatic_configuration.skipped_servers["35"] = "mdx_analyzer"
nvoid.lsp.automatic_configuration.skipped_servers["36"] = "neocmake"
nvoid.lsp.automatic_configuration.skipped_servers["37"] = "nim_langserver"
nvoid.lsp.automatic_configuration.skipped_servers["38"] = "ocamlls"
nvoid.lsp.automatic_configuration.skipped_servers["39"] = "omnisharp"
nvoid.lsp.automatic_configuration.skipped_servers["3"] = "antlersls"
nvoid.lsp.automatic_configuration.skipped_servers["40"] = "phpactor"
nvoid.lsp.automatic_configuration.skipped_servers["41"] = "psalm"
nvoid.lsp.automatic_configuration.skipped_servers["42"] = "pylsp"
nvoid.lsp.automatic_configuration.skipped_servers["43"] = "pylyzer"
nvoid.lsp.automatic_configuration.skipped_servers["44"] = "pyre"
nvoid.lsp.automatic_configuration.skipped_servers["45"] = "quick_lint_js"
nvoid.lsp.automatic_configuration.skipped_servers["46"] = "reason_ls"
nvoid.lsp.automatic_configuration.skipped_servers["47"] = "rnix"
nvoid.lsp.automatic_configuration.skipped_servers["48"] = "rome"
nvoid.lsp.automatic_configuration.skipped_servers["49"] = "rubocop"
nvoid.lsp.automatic_configuration.skipped_servers["4"] = "ast_grep"
nvoid.lsp.automatic_configuration.skipped_servers["50"] = "ruby_ls"
nvoid.lsp.automatic_configuration.skipped_servers["51"] = "ruby_lsp"
nvoid.lsp.automatic_configuration.skipped_servers["52"] = "ruff_lsp"
nvoid.lsp.automatic_configuration.skipped_servers["53"] = "scry"
nvoid.lsp.automatic_configuration.skipped_servers["54"] = "snyk_ls"
nvoid.lsp.automatic_configuration.skipped_servers["55"] = "solang"
nvoid.lsp.automatic_configuration.skipped_servers["56"] = "solc"
nvoid.lsp.automatic_configuration.skipped_servers["57"] = "solidity_ls"
nvoid.lsp.automatic_configuration.skipped_servers["58"] = "solidity_ls_nomicfoundation"
nvoid.lsp.automatic_configuration.skipped_servers["59"] = "sorbet"
nvoid.lsp.automatic_configuration.skipped_servers["5"] = "azure_pipelines_ls"
nvoid.lsp.automatic_configuration.skipped_servers["60"] = "sourcekit"
nvoid.lsp.automatic_configuration.skipped_servers["61"] = "somesass_ls"
nvoid.lsp.automatic_configuration.skipped_servers["62"] = "sourcery"
nvoid.lsp.automatic_configuration.skipped_servers["63"] = "spectral"
nvoid.lsp.automatic_configuration.skipped_servers["64"] = "sqlls"
nvoid.lsp.automatic_configuration.skipped_servers["65"] = "sqls"
nvoid.lsp.automatic_configuration.skipped_servers["66"] = "standardrb"
nvoid.lsp.automatic_configuration.skipped_servers["67"] = "stimulus_ls"
nvoid.lsp.automatic_configuration.skipped_servers["68"] = "stylelint_lsp"
nvoid.lsp.automatic_configuration.skipped_servers["69"] = "svlangserver"
nvoid.lsp.automatic_configuration.skipped_servers["6"] = "basedpyright"
nvoid.lsp.automatic_configuration.skipped_servers["70"] = "swift_mesonls"
nvoid.lsp.automatic_configuration.skipped_servers["71"] = "templ"
nvoid.lsp.automatic_configuration.skipped_servers["72"] = "tflint"
nvoid.lsp.automatic_configuration.skipped_servers["73"] = "unocss"
nvoid.lsp.automatic_configuration.skipped_servers["74"] = "vacuum"
nvoid.lsp.automatic_configuration.skipped_servers["75"] = "verible"
nvoid.lsp.automatic_configuration.skipped_servers["76"] = "v_analyzer"
nvoid.lsp.automatic_configuration.skipped_servers["77"] = "vtsls"
nvoid.lsp.automatic_configuration.skipped_servers["78"] = "vuels"
nvoid.lsp.automatic_configuration.skipped_servers["79"] = "bashls"
nvoid.lsp.automatic_configuration.skipped_servers["7"] = "biome"
nvoid.lsp.automatic_configuration.skipped_servers["8"] = "ccls"
nvoid.lsp.automatic_configuration.skipped_servers["9"] = "cssmodules_ls"
nvoid.lsp.buffer_mappings.normal_mode.gD["1"] = "<cmd>lua vim.lsp.buf.declaration()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.gd["1"] = "<cmd>lua vim.lsp.buf.definition()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.gD["2"] = "Goto Declaration"
nvoid.lsp.buffer_mappings.normal_mode.gd["2"] = "Goto definition"
nvoid.lsp.buffer_mappings.normal_mode.gI["1"] = "<cmd>lua vim.lsp.buf.implementation()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.gI["2"] = "Goto Implementation"
-- nvoid.lsp.buffer_mappings.normal_mode.gl["1"] = function ()
nvoid.lsp.buffer_mappings.normal_mode.gl["2"] = "Show line diagnostics"
nvoid.lsp.buffer_mappings.normal_mode.gr["1"] = "<cmd>lua vim.lsp.buf.references()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.gr["2"] = "Goto references"
nvoid.lsp.buffer_mappings.normal_mode.gs["1"] = "<cmd>lua vim.lsp.buf.signature_help()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.gs["2"] = "show signature help"
nvoid.lsp.buffer_mappings.normal_mode.K["1"] = "<cmd>lua vim.lsp.buf.hover()<cr>"
nvoid.lsp.buffer_mappings.normal_mode.K["2"] = "Show hover"
nvoid.lsp.buffer_options.formatexpr = "v:lua.vim.lsp.formatexpr(#{timeout_ms:500})"
nvoid.lsp.buffer_options.omnifunc = "v:lua.vim.lsp.omnifunc"
nvoid.lsp.code_lens_refresh = true
nvoid.lsp.document_highlight = false
nvoid.lsp.installer.setup.ensure_installed["1"] = "lua_ls"
nvoid.lsp.installer.setup.ensure_installed["2"] = "bashls"
nvoid.lsp.installer.setup.ensure_installed["3"] = "pyright"
nvoid.lsp.nlsp_settings.setup.append_default_schemas = true
nvoid.lsp.nlsp_settings.setup.config_home = "/home/ysf/.config/nvoid/lsp-settings"
nvoid.lsp.nlsp_settings.setup.loader = "json"
nvoid.lsp.null_ls.setup.debug = false
nvoid.lsp.templates_dir = "/home/ysf/.local/share/nvoid/site/after/ftplugin"
nvoid.plugins["10"]["1"] = "kylechui/nvim-surround"
-- nvoid.plugins["10"].config = function ()
nvoid.plugins["11"]["1"] = "folke/todo-comments.nvim"
-- nvoid.plugins["11"].config = function ()
nvoid.plugins["11"].dependencies = "nvim-lua/plenary.nvim"
nvoid.plugins["1"]["1"] = "tamago324/lir.nvim"
nvoid.plugins["12"]["1"] = "folke/zen-mode.nvim"
-- nvoid.plugins["12"].config = function ()
nvoid.plugins["13"]["1"] = "folke/twilight.nvim"
-- nvoid.plugins["13"].config = function ()
nvoid.plugins["14"]["1"] = "lvimuser/lsp-inlayhints.nvim"
nvoid.plugins["14"].branch = "anticonceal"
-- nvoid.plugins["14"].config = function ()
nvoid.plugins["15"]["1"] = "opalmay/vim-smoothie"
-- nvoid.plugins["15"].config = function ()
nvoid.plugins["16"]["1"] = "nvim-pack/nvim-spectre"
-- nvoid.plugins["16"].config = function ()
nvoid.plugins["17"]["1"] = "ellisonleao/glow.nvim"
nvoid.plugins["17"].cmd = "Glow"
nvoid.plugins["17"].config = true
nvoid.plugins["18"]["1"] = "j-hui/fidget.nvim"
nvoid.plugins["18"].branch = "legacy"
-- nvoid.plugins["18"].config = function ()
nvoid.plugins["19"]["1"] = "ahmedkhalf/project.nvim"
-- nvoid.plugins["19"].config = function ()
-- nvoid.plugins["1"].config = function ()
nvoid.plugins["1"].event = "User DirOpened"
nvoid.plugins["20"]["1"] = "nvim-telescope/telescope-file-browser.nvim"
nvoid.plugins["20"].dependencies["1"] = "nvim-telescope/telescope.nvim"
nvoid.plugins["20"].dependencies["2"] = "nvim-lua/plenary.nvim"
nvoid.plugins["2"]["1"] = "NvChad/nvim-colorizer.lua"
-- nvoid.plugins["2"].config = function ()
nvoid.plugins["3"]["1"] = "nvim-treesitter/playground"
-- nvoid.plugins["3"].config = function ()
nvoid.plugins["4"]["1"] = "ChristianChiarulli/nvim-ts-rainbow"
nvoid.plugins["5"]["1"] = "nvim-treesitter/nvim-treesitter-textobjects"
nvoid.plugins["6"]["1"] = "simrat39/symbols-outline.nvim"
-- nvoid.plugins["6"].config = function ()
nvoid.plugins["7"]["1"] = "folke/trouble.nvim"
nvoid.plugins["7"].cmd = "Trouble"
-- nvoid.plugins["7"].config = function ()
nvoid.plugins["8"]["1"] = "jay-babu/mason-null-ls.nvim"
-- nvoid.plugins["8"].config = function ()
nvoid.plugins["8"].dependencies["1"] = "williamboman/mason.nvim"
nvoid.plugins["8"].dependencies["2"] = "nvimtools/none-ls.nvim"
nvoid.plugins["8"].event["1"] = "BufReadPre"
nvoid.plugins["8"].event["2"] = "BufNewFile"
nvoid.plugins["9"]["1"] = "jay-babu/mason-nvim-dap.nvim"
nvoid.plugins["9"].cmd["1"] = "DapInstall"
nvoid.plugins["9"].cmd["2"] = "DapUninstall"
-- nvoid.plugins["9"].config = function ()
nvoid.reload_config_on_save = true
nvoid.terminal.behavior.close_on_exit = true
nvoid.terminal.window.split_ratio = 0.3
nvoid.terminal.window.vsplit_ratio = 0.5
nvoid.ui.colorscheme = "ashes"
nvoid.ui.hl_add.CommandMode.bg = "none"
nvoid.ui.hl_add.CommandMode.fg = "yellow"
nvoid.ui.hl_add.CursorLineNr.bold = true
nvoid.ui.hl_add.CursorLineNr.fg = "blue"
nvoid.ui.hl_add.InsertMode.bg = "none"
nvoid.ui.hl_add.InsertMode.fg = "green"
nvoid.ui.hl_add.NormalMode.bg = "none"
nvoid.ui.hl_add.NormalMode.fg = "blue"
nvoid.ui.hl_add.NvDashAscii.bg = "blue"
nvoid.ui.hl_add.NvDashAscii.fg = "black"
nvoid.ui.hl_add.NvDashButtons.bg = "black2"
nvoid.ui.hl_add.NvDashButtons.fg = "white"
nvoid.ui.hl_add["rainbowcol1"].fg = "red"
nvoid.ui.hl_add["rainbowcol2"].fg = "yellow"
nvoid.ui.hl_add["rainbowcol3"].fg = "green"
nvoid.ui.hl_add["rainbowcol4"].fg = "teal"
nvoid.ui.hl_add["rainbowcol5"].fg = "blue"
nvoid.ui.hl_add["rainbowcol6"].fg = "purple"
nvoid.ui.hl_add["rainbowcol7"].fg = "purple"
nvoid.ui.hl_add.RenamerBorder.bg = "darker_black"
nvoid.ui.hl_add.RenamerBorder.fg = "darker_black"
nvoid.ui.hl_add.RenamerTitle.bg = "red"
nvoid.ui.hl_add.RenamerTitle.fg = "darker_black"
nvoid.ui.hl_add.ReplaceMode.bg = "none"
nvoid.ui.hl_add.ReplaceMode.fg = "red"
nvoid.ui.hl_add.SelectMode.bg = "none"
nvoid.ui.hl_add.SelectMode.fg = "orange"
nvoid.ui.hl_add.ST_TS.bg = "statusline_bg"
nvoid.ui.hl_add.ST_TS.fg = "green"
nvoid.ui.hl_add.TerminalMode.bg = "none"
nvoid.ui.hl_add.TerminalMode.fg = "cyan"
nvoid.ui.hl_add.TerminalNormalMode.bg = "none"
nvoid.ui.hl_add.TerminalNormalMode.fg = "teal"
nvoid.ui.hl_add.TroubleCount.bg = "grey"
nvoid.ui.hl_add.TroubleCount.fg = "purple"
nvoid.ui.hl_add.TroubleNormal.bg = "black"
nvoid.ui.hl_add.TroubleNormal.fg = "white"
nvoid.ui.hl_add.TroubleText.fg = "white"
nvoid.ui.hl_add.TSRainbowBlue.fg = "blue"
nvoid.ui.hl_add.TSRainbowCyan.fg = "cyan"
nvoid.ui.hl_add.TSRainbowGreen.fg = "green"
nvoid.ui.hl_add.TSRainbowOrange.fg = "orange"
nvoid.ui.hl_add.TSRainbowRed.fg = "red"
nvoid.ui.hl_add.TSRainbowViolet.fg = "purple"
nvoid.ui.hl_add.TSRainbowYellow.fg = "yellow"
nvoid.ui.hl_add.VisualMode.bg = "none"
nvoid.ui.hl_add.VisualMode.fg = "purple"
nvoid.ui.hl_override.CmpItemKindClass.bg = "teal"
nvoid.ui.hl_override.CmpItemKindClass.fg = "black"
nvoid.ui.hl_override.CmpItemKindColor.bg = "white"
nvoid.ui.hl_override.CmpItemKindColor.fg = "black"
nvoid.ui.hl_override.CmpItemKindConstant.bg = "orange"
nvoid.ui.hl_override.CmpItemKindConstant.fg = "black"
nvoid.ui.hl_override.CmpItemKindConstructor.bg = "blue"
nvoid.ui.hl_override.CmpItemKindConstructor.fg = "black"
nvoid.ui.hl_override.CmpItemKindCopilot.bg = "green"
nvoid.ui.hl_override.CmpItemKindCopilot.fg = "black"
nvoid.ui.hl_override.CmpItemKindEnum.bg = "blue"
nvoid.ui.hl_override.CmpItemKindEnum.fg = "black"
nvoid.ui.hl_override.CmpItemKindEnumMember.bg = "purple"
nvoid.ui.hl_override.CmpItemKindEnumMember.fg = "black"
nvoid.ui.hl_override.CmpItemKindEvent.bg = "yellow"
nvoid.ui.hl_override.CmpItemKindEvent.fg = "black"
nvoid.ui.hl_override.CmpItemKindField.bg = "vibrant_green"
nvoid.ui.hl_override.CmpItemKindField.fg = "black"
nvoid.ui.hl_override.CmpItemKindFile.bg = "white"
nvoid.ui.hl_override.CmpItemKindFile.fg = "black"
nvoid.ui.hl_override.CmpItemKindFolder.bg = "white"
nvoid.ui.hl_override.CmpItemKindFolder.fg = "black"
nvoid.ui.hl_override.CmpItemKindFunction.bg = "blue"
nvoid.ui.hl_override.CmpItemKindFunction.fg = "black"
nvoid.ui.hl_override.CmpItemKindIdentifier.bg = "vibrant_green"
nvoid.ui.hl_override.CmpItemKindIdentifier.fg = "black"
nvoid.ui.hl_override.CmpItemKindInterface.bg = "green"
nvoid.ui.hl_override.CmpItemKindInterface.fg = "black"
nvoid.ui.hl_override.CmpItemKindKeyword.bg = "white"
nvoid.ui.hl_override.CmpItemKindKeyword.fg = "black"
nvoid.ui.hl_override.CmpItemKindMethod.bg = "blue"
nvoid.ui.hl_override.CmpItemKindMethod.fg = "black"
nvoid.ui.hl_override.CmpItemKindModule.bg = "teal"
nvoid.ui.hl_override.CmpItemKindModule.fg = "black"
nvoid.ui.hl_override.CmpItemKindOperator.bg = "light_grey"
nvoid.ui.hl_override.CmpItemKindOperator.fg = "black"
nvoid.ui.hl_override.CmpItemKindProperty.bg = "vibrant_green"
nvoid.ui.hl_override.CmpItemKindProperty.fg = "black"
nvoid.ui.hl_override.CmpItemKindReference.bg = "light_grey"
nvoid.ui.hl_override.CmpItemKindReference.fg = "black"
nvoid.ui.hl_override.CmpItemKindSnippet.bg = "red"
nvoid.ui.hl_override.CmpItemKindSnippet.fg = "black"
nvoid.ui.hl_override.CmpItemKindStruct.bg = "purple"
nvoid.ui.hl_override.CmpItemKindStruct.fg = "black"
nvoid.ui.hl_override.CmpItemKindStructure.bg = "purple"
nvoid.ui.hl_override.CmpItemKindStructure.fg = "black"
nvoid.ui.hl_override.CmpItemKindText.bg = "green"
nvoid.ui.hl_override.CmpItemKindText.fg = "black"
nvoid.ui.hl_override.CmpItemKindType.bg = "teal"
nvoid.ui.hl_override.CmpItemKindType.fg = "black"
nvoid.ui.hl_override.CmpItemKindTypeParameter.bg = "vibrant_green"
nvoid.ui.hl_override.CmpItemKindTypeParameter.fg = "black"
nvoid.ui.hl_override.CmpItemKindUnit.bg = "purple"
nvoid.ui.hl_override.CmpItemKindUnit.fg = "black"
nvoid.ui.hl_override.CmpItemKindValue.bg = "cyan"
nvoid.ui.hl_override.CmpItemKindValue.fg = "black"
nvoid.ui.hl_override.CmpItemKindVariable.bg = "purple"
nvoid.ui.hl_override.CmpItemKindVariable.fg = "black"
nvoid.ui.hl_override.St_CommandModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_CommandModeE.fg = "green"
nvoid.ui.hl_override.St_ConfirmModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_ConfirmModeE.fg = "teal"
nvoid.ui.hl_override.St_InsertModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_InsertModeE.fg = "dark_purple"
nvoid.ui.hl_override.St_NormalModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_NormalModeE.fg = "nord_blue"
nvoid.ui.hl_override.St_NTerminalModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_NTerminalModeE.fg = "green"
nvoid.ui.hl_override.St_pos_text.bg = "statusline_bg"
nvoid.ui.hl_override.St_pos_text.fg = "orange"
nvoid.ui.hl_override.St_ReplaceModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_ReplaceModeE.fg = "orange"
nvoid.ui.hl_override.St_SelectModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_SelectModeE.fg = "nord_blue"
nvoid.ui.hl_override.St_TerminalModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_TerminalModeE.fg = "green"
nvoid.ui.hl_override.St_VisualModeE.bg = "statusline_bg"
nvoid.ui.hl_override.St_VisualModeE.fg = "cyan"
nvoid.ui.statusline.config = "%!v:lua.reload('ysf.ui.statusline').run()"
nvoid.ui.statusline.enabled = true
nvoid.ui.statusline.style = "nvoid"
nvoid.ui.transparency = false
nvoid.use_icons = true
